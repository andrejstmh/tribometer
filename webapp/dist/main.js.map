{"version":3,"sources":["/./node_modules/moment/locale sync ^\\.\\/.*$","/./src/app/app.component.html","/./src/app/components/calibr-curve/calibr-curve.component.html","/./src/app/components/controls/status-row/status-row.component.html","/./src/app/components/controls/tabulator-table/tabulator-table.component.html","/./src/app/components/experiment/experiment.component.html","/./src/app/components/navbar/navbar.component.html","/./src/app/components/not-found/not-found.component.html","/./src/app/components/settings/settings.component.html","/./src/app/components/trib-controls/trib-controls.component.html","/./src/$_lazy_route_resource lazy namespace object","/./src/app/app-routing.module.ts","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/components/calibr-curve/calibr-curve.component.css","/./src/app/components/calibr-curve/calibr-curve.component.ts","/./src/app/components/controls/status-row/status-row.component.css","/./src/app/components/controls/status-row/status-row.component.ts","/./src/app/components/controls/tabulator-table/tabulator-table.component.css","/./src/app/components/controls/tabulator-table/tabulator-table.component.ts","/./src/app/components/experiment/experiment.component.css","/./src/app/components/experiment/experiment.component.ts","/./src/app/components/navbar/navbar.component.css","/./src/app/components/navbar/navbar.component.ts","/./src/app/components/not-found/not-found.component.css","/./src/app/components/not-found/not-found.component.ts","/./src/app/components/settings/settings.component.css","/./src/app/components/settings/settings.component.ts","/./src/app/components/show-errors.component.ts","/./src/app/components/trib-controls/trib-controls.component.css","/./src/app/components/trib-controls/trib-controls.component.ts","/./src/app/models/message.model.ts","/./src/app/services/chart.service.ts","/./src/app/services/signals.service.ts","/./src/assets/bearing.png","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappingsnRA,sI;;;;;;;;;;;ACAA,udAAud,YAAY,uVAAuV,oBAAoB,0WAA0W,YAAY,4gCAA4gC,0CAA0C,+DAA+D,wCAAwC,wPAAwP,2CAA2C,+DAA+D,yCAAyC,q/GAAq/G,aAAa,8OAA8O,qBAAqB,8hB;;;;;;;;;;;ACAj/M,+JAA+J,gFAAgF,kWAAkW,yBAAyB,i5E;;;;;;;;;;;ACA1mB,uB;;;;;;;;;;;ACAA,+EAA+E,8EAA8E,ypCAAypC,mCAAmC,uDAAuD,+BAA+B,uDAAuD,uBAAuB,uDAAuD,uBAAuB,uDAAuD,+BAA+B,2DAA2D,qCAAqC,2NAA2N,mCAAmC,uDAAuD,8BAA8B,uDAAuD,sBAAsB,uDAAuD,sBAAsB,uDAAuD,8BAA8B,2DAA2D,mCAAmC,u5E;;;;;;;;;;;ACAj6E,imBAAimB,8EAA8E,yyCAAyyC,6BAA6B,6SAA6S,8BAA8B,8J;;;;;;;;;;;ACAh0E,qLAAqL,uBAAuB,uMAAuM,gBAAgB,oEAAoE,yBAAyB,sGAAsG,uBAAuB,yD;;;;;;;;;;;ACA7nB,0rBAA0rB,QAAQ,stSAAstS,YAAY,qEAAqE,QAAQ,qEAAqE,OAAO,qEAAqE,QAAQ,qEAAqE,QAAQ,usL;;;;;;;;;;;ACAvtU,y3CAAy3C,wBAAwB,QAAQ,6BAA6B,+8HAA+8H,oCAAoC,+CAA+C,4BAA4B,+CAA+C,4BAA4B,+CAA+C,oCAAoC,mDAAmD,+CAA+C,2LAA2L,mCAAmC,+CAA+C,2BAA2B,+CAA+C,2BAA2B,+CAA+C,mCAAmC,mDAAmD,6CAA6C,ouB;;;;;;;;;;;ACAxxM;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEsB;AACM;AACJ;AACS;AACG;AAC3F,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,oGAAoB,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,EAAE;IAC1F,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,uGAAqB,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE;IACnF,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE;IAC/E,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,+FAAmB,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE;IACnF,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE;IACvD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,2FAAiB,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE;CAClF,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrB7B,+DAA+D,+H;;;;;;;;;;;;;;;;;;;;;ACAH;AAE4B;AAChC;AACG;AACb;AAO9C;IAGI,sBACY,cAA8B,EAC9B,YAA0B;QAD1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAJtC,YAAO,GAAG,mBAAO,CAAC,yDAAyB,CAAC,CAAC;QAC7C,UAAK,GAAG,YAAY,CAAC;IAIrB,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAYC;QAXG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,CAAC;QAC9C,qDAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,CAAC,SAAS,CACjF,UAAC,EAAS;gBAAT,wDAAS,EAAR,UAAE,EAAE,WAAG;YACL,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACxC,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,6DAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9B,CAAC,EACD,gBAAM,IAAM,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,EACjD,cAAQ,CAAC,CACZ,CAAC;IACN,CAAC;IAED,yCAAkB,GAAlB;QAAA,iBAsBC;QArBG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CACvC,WAAC;YACG,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;YAC7C,KAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;YAClC,kCAAkC;YAClC,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAChC,aAAG;gBACC,iCAAiC;gBACjC,IAAI,GAAG,CAAC,UAAU,EAAE;oBAChB,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBACnD,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;iBACrD;gBACD,IAAI,GAAG,CAAC,KAAK,EAAE;oBACX,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBAClD;YAET,CAAC,CAAC,CAAC;QACP,CAAC,EACD,gBAAM,IAAM,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,CAAC,CAAC,EAC9D,cAAQ,CAAC,CACZ,CAAC;IACN,CAAC;IACD,kCAAW,GAAX;QACI,8EAA8E;QAC9E,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC;;gBA5C2B,wEAAc;gBAChB,oEAAY;;IAL7B,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;;SAEpC,CAAC;+EAK8B,wEAAc;YAChB,oEAAY;OAL7B,YAAY,CAiDxB;IAAD,mBAAC;CAAA;AAjDwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZiC;AACQ;AACV;AACf;AAEC;AACqC;AACtB;AACc;AACA;AACL;AAEV;AACT;AACwB;AACM;AACM;AACK;AACG;AACZ;AACN;AAEzE,4DAA4D;AACA;AACJ;AACkD;AACf;AA0B3F;IAAA;IAAyB,CAAC;IAAb,SAAS;QAvBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,oFAAe;gBACf,0FAAiB;gBACjB,gGAAmB;gBACnB,qGAAoB;gBACpB,4FAAiB;gBACjB,sFAAmB;gBACnB,wBAAwB;gBACxB,uHAAuB;gBACvB,wGAAkB;gBAClB,wGAAqB;aACtB;YACC,OAAO,EAAE;gBACL,4FAAuB,EAAE,sEAAc,EAAE,iEAAe,EAAE,mEAAiB,EAAE,oFAAqB;gBAClG,gFAAkB;gBAClB,qEAAgB,EAAE,uEAAa,EAAE,kEAAmB,EAAE,0DAAW,EAAE,uDAAY;gBAC/E,qEAAgB;aACrB;YACC,SAAS,EAAE,CAAC,yEAAc,EAAE,qEAAY,CAAC;YAC3C,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpDtB,+BAA+B,6CAA6C,qBAAqB,wBAAwB,uBAAuB,KAAK,2BAA2B,qBAAqB,sBAAsB,+BAA+B,mBAAmB,KAAK,wBAAwB,oCAAoC,KAAK,yDAAyD,u3B;;;;;;;;;;;;;;;;;;;;;ACA/U;AAE4B;AACxB;AACC;AACJ;AAE9D;IACI,kBAAmB,CAAa,EAAS,CAAa,EAAS,EAAiB;QAA7D,yBAAa;QAAS,yBAAa;QAAS,8BAAiB;QAA7D,MAAC,GAAD,CAAC,CAAY;QAAS,MAAC,GAAD,CAAC,CAAY;QAAS,OAAE,GAAF,EAAE,CAAe;IAAI,CAAC;;;;;;IACzF,eAAC;CAAA;AAED;IACI,mBAAmB,IAAa,EAAS,IAAa,EAAS,KAAgB;QAA5D,SAAI,GAAJ,IAAI,CAAS;QAAS,SAAI,GAAJ,IAAI,CAAS;QAAS,UAAK,GAAL,KAAK,CAAW;IAAI,CAAC;;;;;;IACxF,gBAAC;CAAA;AAED;IACI,qBAAmB,UAAmB,EAAS,QAAiB,EACrD,WAAoB,EAAS,SAAkB;QADvC,eAAU,GAAV,UAAU,CAAS;QAAS,aAAQ,GAAR,QAAQ,CAAS;QACrD,gBAAW,GAAX,WAAW,CAAS;QAAS,cAAS,GAAT,SAAS,CAAS;IAAI,CAAC;;;;;;;IAEnE,kBAAC;CAAA;AAOD;IAcI,8BACY,UAA0B,EAC1B,YAA0B;QAD1B,eAAU,GAAV,UAAU,CAAgB;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAftC,kBAAa,GAAc,IAAI,CAAC;QAChC,YAAO,GAAG;YACN,IAAI,SAAS,CAAC,kCAAkC,EAAE,SAAS,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;YACxF,IAAI,SAAS,CAAC,wBAAwB,EAAE,WAAW,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;SACnF;QACD,gBAAW,GAAgB,IAAI,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC/D,UAAK,GAAgC,IAAI,oDAAe,CAAa,EAAE,CAAC,CAAC;QACzE,cAAS,GAAY,KAAK,CAAC;QAC3B,gBAAW,GAAa,IAAI,QAAQ,EAAE,CAAC;QACvC,aAAQ,GAAe,EAAE,CAAC;QAC1B,YAAO,GAAiB,IAAI,CAAC;QAC7B,cAAS,GAAqB,IAAI,CAAC;QAM/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAsBC;QArBG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,SAAS,CAC1D,cAAI;YACA,IAAI,IAAI,EAAE;gBACN,UAAU;gBACV,iBAAiB;gBACjB,IAAI,KAAI,CAAC,aAAa,IAAI,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBACvC,WAAW;oBACX,KAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxF;qBAAM;oBACH,MAAM;oBACN,KAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxF;aAGJ;YACD,qCAAqC;QACzC,CAAC,EACD,gBAAM,IAAM,CAAC,EACb,cAAQ,CAAC,CACZ,CAAC;IACN,CAAC;IACD,0CAAW,GAAX;QACI,IAAI,IAAI,CAAC,OAAO,EAAE;YAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;SAAE;IACrD,CAAC;IACD,0CAAW,GAAX,UAAY,CAAM;QACd,OAAO,+DAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IACD,wCAAS,GAAT,UAAU,EAAoB;IAC9B,CAAC;IAED,uCAAQ,GAAR,UAAS,MAAM;QAAf,iBAsBC;QArBG,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,6BAA6B;YAC7B,yBAAyB;YACzB,wBAAwB;YACxB,uDAAuD;YACvD,uDAAuD;YACvD,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,YAAE;gBACxD,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;gBACnC,sBAAsB;gBACtB,uBAAuB;gBACvB,IAAI,GAAG,GAAe,EAAE,CAAC;gBACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAClC,GAAG,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC5C,iEAAiE;iBACpE;gBACD,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,qBAAqB;YACzB,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAGD,4CAAa,GAAb,UAAc,EAAW;QACrB,IAAI,EAAE,KAAK,SAAS,EAAE;YAClB,OAAO,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SACnC;aAAM;YACH,OAAO,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;SACjC;IACL,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAWC;QAVG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAC3B,GAAG,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,IAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,GAAG,EAAE;YAClB,GAAG,CAAC,OAAO,CAAC,WAAC,IAAM,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SAC7B;aAAM;YACH,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;IACL,CAAC;IAED,0CAAW,GAAX,UAAY,CAAM;QACd,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SACxB;IACL,CAAC;IAED,wCAAS,GAAT;QACI,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,IAAI,EAAE;YAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAC3B,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChB,8FAA8F;gBAC9F,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACnC,GAAG,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,IAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,uCAAsC;gBAClF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACxB;SACJ;IACL,CAAC;IAED,yCAAU,GAAV,UAAW,MAAe;QACtB,IAAI,EAAE,GAAW,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;QACrC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC3B,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACnC,IAAI,EAAE,IAAI,IAAI,EAAE;YACZ,IAAI,MAAM,EAAE;gBACR,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;aAC9B;iBAAM;gBACH,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;gBAC/B,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;aACf;SACJ;aAAM;YACH,IAAI,MAAM,EAAE;gBACR,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACrB,EAAE,GAAG,CAAC,CAAC;aACV;iBAAM;gBACH,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClB,EAAE,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;aACvB;SAEJ;QACD,GAAG,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,IAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEzB,CAAC;IAED,6CAAc,GAAd;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,4CAAa,GAAb;QACI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,uCAAQ,GAAR,UAAS,EAAW;QAChB,IAAI,EAAE,GAAW,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;QACrC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC3B,IAAI,KAAK,GAAY,KAAK,CAAC;QAC3B,IAAI,EAAE,IAAI,IAAI,EAAE;YACZ,IAAI,EAAE,EAAE;gBACJ,IAAI,EAAE,GAAG,CAAC,EAAE;oBACR,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;oBACjB,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;oBACtB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;oBACZ,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;oBACb,KAAK,GAAG,IAAI,CAAC;iBAChB;aACJ;iBAAM;gBACH,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrB,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;oBACjB,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;oBACtB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;oBACZ,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;oBACb,KAAK,GAAG,IAAI,CAAC;iBAChB;aACJ;YACD,IAAI,KAAK,EAAE;gBACP,GAAG,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,IAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;gBAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACxB;SACJ;IACL,CAAC;IAED,qCAAM,GAAN;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAED,uCAAQ,GAAR;QACI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAED,uCAAQ,GAAR;QAAA,iBASC;QARG,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC3B,IAAI,EAAE,GAAG,IAAI,sEAAgB,EAAE,CAAC;QAChC,GAAG,CAAC,OAAO,CAAC,YAAE,IAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,SAAS,CACvE,eAAK,IAAM,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,KAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EACpD,gBAAM,IAAM,CAAC,EACb,cAAQ,CAAC,CACZ,CAAC;IACN,CAAC;IAED,yCAAU,GAAV;QACI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,GAAG,GAAe,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAC,IAAM,GAAG,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;;gBAjMuB,wEAAc;gBACZ,oEAAY;;IAhB7B,oBAAoB;QALhC,+DAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;YAC5B,iLAA4C;;SAE/C,CAAC;+EAgB0B,wEAAc;YACZ,oEAAY;OAhB7B,oBAAoB,CAiNhC;IAAD,2BAAC;CAAA;AAjNgC;;;;;;;;;;;;AC1BjC,+DAA+D,mL;;;;;;;;;;;;;;;;;;;ACA2C;AAIrC;AACJ;AAOjE;IAEI,4BAAmB,cAA8B,EACrC,YAA0B;QADnB,mBAAc,GAAd,cAAc,CAAgB;QACrC,iBAAY,GAAZ,YAAY,CAAc;QAF7B,eAAU,GAAW,EAAE,CAAC;IAGjC,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IAED,wCAAW,GAAX,UAAY,OAAsB;IAElC,CAAC;;gBATkC,wEAAc;gBACvB,oEAAY;;IAF7B;QAAR,2DAAK,EAAE;;0DAAyB;IADxB,kBAAkB;QAL9B,+DAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,oLAA0C;;SAE7C,CAAC;+EAGqC,wEAAc;YACvB,oEAAY;OAH7B,kBAAkB,CAa9B;IAAD,yBAAC;CAAA;AAb8B;;;;;;;;;;;;ACZ/B,+DAA+D,+L;;;;;;;;;;;;;;;;;;;ACA2C;AACjE;AAQzC;IAgBI,iCAAoB,UAAsB,EAAU,QAAmB;QAAnD,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAf9D,eAAU,GAAW,EAAE,CAAC;QACxB,kBAAa,GAAQ,EAAE;QACvB,cAAS,GAAU,EAAE,CAAC;QACtB,iBAAY,GAAU,IAAI,CAAC;QACpC,qCAAqC;QAC5B,WAAM,GAAQ,IAAI,CAAC;QACnB,iBAAY,GAAQ,IAAI,CAAC;QACzB,aAAQ,GAAQ,IAAI,CAAC;QACrB,UAAK,GAAW,IAAI,CAAC;QAC9B,sCAAsC;QAC7B,qBAAgB,GAAQ,IAAI,CAAC;QAC7B,sCAAiC,GAAY,IAAI,CAAC;QAClD,wBAAmB,GAAQ,IAAI,CAAC;QACzC,QAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpC,cAAS,GAAc,IAAI,CAAC;IAE5B,CAAC;IAED,0CAAQ,GAAR;IACA,CAAC;IAED,6CAAW,GAAX,UAAY,OAAsB;QAC9B,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAEO,2CAAS,GAAjB;QACI,iEAAiE;QACjE,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SACnD;QACD,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;SACjC;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;SACrC;QACD,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;SAC3C;QAED,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;YAC3B,QAAQ,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;SAChD;QACD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;YACvB,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;SACxC;QAED,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,EAAE;YAClC,QAAQ,CAAC,qBAAqB,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC;SAC9D;QAED,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YACrB,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;SACpC;QACD,4BAA4B;QAC5B,qDAAqD;QACrD,GAAG;QACH,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;YAC/B,QAAQ,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;SACxD;QACD,IAAI,IAAI,CAAC,iCAAiC,IAAI,IAAI,EAAE;YAChD,QAAQ,CAAC,mCAAmC,CAAC,GAAG,IAAI,CAAC,iCAAiC,CAAC;SAC1F;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,uDAAS,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QACnD,+BAA+B;QAC/B,uDAAuD;QACvD,oEAAoE;QACpE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QACnE,uEAAuE;IAC3E,CAAC;;gBAvD+B,wDAAU;gBAAoB,uDAAS;;IAf9D;QAAR,2DAAK,EAAE;;+DAAyB;IACxB;QAAR,2DAAK,EAAE;;kEAAwB;IACvB;QAAR,2DAAK,EAAE;;8DAAuB;IACtB;QAAR,2DAAK,EAAE;;iEAA4B;IAE3B;QAAR,2DAAK,EAAE;;2DAAoB;IACnB;QAAR,2DAAK,EAAE;;iEAA0B;IACzB;QAAR,2DAAK,EAAE;;6DAAsB;IACrB;QAAR,2DAAK,EAAE;;0DAAsB;IAErB;QAAR,2DAAK,EAAE;;qEAA8B;IAC7B;QAAR,2DAAK,EAAE;;sFAAmD;IAClD;QAAR,2DAAK,EAAE;;wEAAiC;IAbhC,uBAAuB;QALnC,+DAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;YAC/B,mMAA+C;;SAElD,CAAC;+EAiBkC,wDAAU,EAAoB,uDAAS;OAhB9D,uBAAuB,CAwEnC;IAAD,8BAAC;CAAA;AAxEmC;;;;;;;;;;;;ACTpC,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;;ACAS;AACd;AAGI;AAEmE;AAC/D;AACe;AAQjF;IASI,6BACW,cAA8B,EAC7B,YAA0B;QAD3B,mBAAc,GAAd,cAAc,CAAgB;QAC7B,iBAAY,GAAZ,YAAY,CAAc;QAVtC,aAAQ,GAA6B,IAAI,CAAC;QAC1C,gBAAW,GAA4B,IAAI,CAAC;QAC5C,YAAO,GAAmB,EAAE,CAAC;QAC7B,wBAAmB,GAAG,qDAAQ,CAAC,KAAK,CAAC,CAAC;QACtC,iCAA4B,GAAiB,IAAI,CAAC;QAC3C,cAAS,GAAsB,IAAI,yEAAiB,EAAE,CAAC;IAMzD,CAAC;IAEN,sCAAQ,GAAR;QAAA,iBAsBC;QArBG,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,YAAY,EAAE;QACvE,qEAAqE;QACrE,eAAe;QACf,kCAAkC;QAClC,QAAQ;QACR,oBAAoB;QACpB,eAAe;QACf,KAAK;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CACtD,eAAK;YACD,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,EACD,gBAAM,IAAM,CAAC,EACb,cAAQ,CAAC,CACZ,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,EAAE;YACtC,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;gBAClD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC;aACjE;SACJ;IACL,CAAC;IACD,yCAAW,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAE,IAAM,IAAI,EAAE,EAAE;YAAE,EAAE,CAAC,WAAW,EAAE,CAAC;SAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC;IACD,yCAAW,GAAX,UAAY,CAAM;QACd,OAAO,+DAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAEM,4CAAc,GAArB,UAAsB,CAAS;QAC3B,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAC9B,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/D,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QACnB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;QAC1B,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/D,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QACf,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/D,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;QACZ,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACvE,OAAU,EAAE,SAAI,EAAE,SAAI,EAAE,SAAI,EAAI,CAAC;IACrC,CAAC;IAED,8CAAgB,GAAhB,UAAiB,CAAmB;QAChC,IAAI,CAAC,EAAE;YACH,gDAAgD;YAChD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC,iCAAgC;YACrF,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,yBAAwB;YACrE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,0BAAyB;YACvE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC,8BAA6B;YAC/E,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACjE,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;gBACpC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;aACxB;SACJ;IACL,CAAC;IAED,6CAAe,GAAf;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,4CAAc,GAAd;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAEM,uCAAS,GAAhB,UAAiB,IAAc;QAC3B,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC;YAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,OAAO,IAAI,CAAC;IAChB,CAAC;IACM,8CAAgB,GAAvB;QACI,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;IACxC,CAAC;IAED,wCAAU,GAAV;QAAA,iBAUC;QATG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CACtC,eAAK;YACD,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC;YAC9D,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACxC,CAAC,EACD,gBAAM,IAAM,CAAC,EACb,cAAQ,CAAC,CACZ,CAAC;IACN,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAWC;QAVG,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,SAAS,CACpC,eAAK;YACD,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACxC,CAAC,EACD,gBAAM,IAAM,CAAC,EACb,cAAQ,CAAC,CACZ,CAAC;IACN,CAAC;IACD,8CAAgB,GAAhB;QACI,IAAI,IAAI,CAAC,4BAA4B,EAAE;YACnC,IAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,CAAC;YAChD,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;SAC5C;IACL,CAAC;IACD,uCAAS,GAAT,UAAU,MAAc;QAAxB,iBASC;QARG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,MAAM,GAAG,CAAC,EAAE;YACZ,IAAI,CAAC,mBAAmB,GAAG,qDAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;YACpD,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,WAAC;gBACpE,KAAI,CAAC,gBAAgB,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;SACN;IAEL,CAAC;IACD,mDAAqB,GAArB,UAAsB,UAAe;QACjC,IAAI,CAAC,YAAY,CAAC,2BAA2B,GAAG,CAAC,CAAC;QAClD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;QACpB,IAAI,CAAC,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,YAAY,CAAC,2BAA2B,GAAG,CAAC,CAAC;SACrD;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC;IAClE,CAAC;IACD,2CAAa,GAAb;QACI,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;;gBAjI0B,wEAAc;gBACf,oEAAY;;IAJ4B;QAAjE,+DAAS,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,6DAAkB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAS,6DAAkB;uDAAC;IAPpF,mBAAmB;QAL/B,+DAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,2KAA0C;;SAE7C,CAAC;+EAW6B,wEAAc;YACf,oEAAY;OAX7B,mBAAmB,CA6I/B;IAAD,0BAAC;CAAA;AA7I+B;;;;;;;;;;;;AChBhC,+DAA+D,2J;;;;;;;;;;;;;;;;;;ACAb;AACgB;AAOlE;IAEI,yBAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QADnD,YAAO,GAAG,mBAAO,CAAC,6DAA6B,CAAC,CAAC;IACM,CAAC;IAExD,kCAAQ,GAAR;IACA,CAAC;;gBAHoC,wEAAc;;IAFxC,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,+JAAsC;;SAEvC,CAAC;+EAGqC,wEAAc;OAFxC,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACR5B,yCAAyC,yBAAyB,KAAK,yBAAyB,uBAAuB,KAAK,4BAA4B,yBAAyB,6BAA6B,KAAK,mDAAmD,2nB;;;;;;;;;;;;;;;;;ACA5N;AAO1C;IAAA;IAEA,CAAC;IAFY,iBAAiB;QAL7B,+DAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,wKAAyC;;SAE5C,CAAC;OACW,iBAAiB,CAE7B;IAAD,wBAAC;CAAA;AAF6B;;;;;;;;;;;;ACP9B,uCAAuC,uBAAuB,kBAAkB,KAAK,uBAAuB,sBAAsB,KAAK,uDAAuD,+e;;;;;;;;;;;;;;;;;;;;;;;;;ACAjI;AACrB;AACgD;AACwB;AAKxF;AAE+E;AACrC;AAGlE,kEAAkE;AAClE;IAAA;IAMA,CAAC;IALG,gDAAY,GAAZ,UAAa,OAA2B,EAAE,IAAwC;QAC9E,6CAA6C;QAC7C,6FAA6F;QAC7F,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IACL,gCAAC;AAAD,CAAC;;AAEM,SAAS,yBAAyB,CAAC,cAA8B;IACpE,OAAO,UAAC,OAAwB;QAC5B,OAAO,cAAc,CAAC,mBAAmB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CACzD,mEAAY,CAAC,GAAG,CAAC,EAAE,2EAAoB,EAAE,EACzC,0DAAG,CACC,YAAE;YACE,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAC,EAAE,CAAC;YAC5C,OAAO,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACjE,CAAC,CACA,CACJ,CAAC;IACN,CAAC,CAAC;AACN,CAAC;AAAA,CAAC;AAOF;IAUI,2BACY,cAA8B,EAC9B,MAAc;QADd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QAXlB,oBAAe,GAAG,IAAI,4CAAO,EAAU,CAAC;QAEhD,WAAM,GAA8B,IAAI,oDAAe,CAAW,EAAE,CAAC,CAAC;QACtE,cAAS,GAAe,IAAI,CAAC;QAC7B,wDAAwD;QACxD,iBAAY,GAAiB,IAAI,CAAC;QAClC,gBAAW,GAAiB,IAAI,CAAC;QACjC,iBAAY,GAAc,IAAI,CAAC;QAC/B,YAAO,GAAG,IAAI,yBAAyB,EAAE,CAAC;QAoI1C,gBAAW,GAAc,IAAI,CAAC;QA/H1B,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAC9B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvD,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC/D,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,yBAAyB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACnH,kBAAkB,EAAE,IAAI,0DAAW,CAAC,CAAC,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACrG,kBAAkB,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,EAAE,CAAC;YAC7C,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACpG,WAAW,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YAClG,UAAU,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YAClG,kBAAkB,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACvG,iBAAiB,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SAC1G,CAAC,CAAC;IACP,CAAC;IAED,sBAAI,0CAAW;aAAf,cAAoB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAClE,sBAAI,kDAAmB;aAAvB,cAA4B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAClF,sBAAI,oDAAqB;aAAzB,cAA8B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IACtF,sBAAI,iDAAkB;aAAtB,cAA2B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAChF,sBAAI,iDAAkB;aAAtB,cAA2B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAEhF,sBAAI,8CAAe;aAAnB,cAAwB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAC1E,sBAAI,0CAAW;aAAf,cAAoB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAClE,sBAAI,yCAAU;aAAd,cAAmB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAChE,sBAAI,iDAAkB;aAAtB,cAA2B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAChF,sBAAI,gDAAiB;aAArB,cAA0B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAItE,mCAAO,GAAf,UAAgB,KAAa;QACzB,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAM,IAAI,aAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,EAA1C,CAA0C,CAAC,CAAC;IAC1F,CAAC;IAED,sBAAI,2CAAY;aAAhB;YACI,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;oBAC5B,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;iBACjC;qBAAM;oBACH,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC7C;aACJ;iBAAM;gBAAE,OAAO,EAAE;aAAE;YAAA,CAAC;QACzB,CAAC;;;OAAA;IACD,oCAAQ,GAAR;QAAA,iBAsEC;QArEG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY;aAC/C,IAAI,CACD,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,eAAK,IAAI,YAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAnB,CAAmB,CAAC,CACpC,CAAC;QAEN,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,CAAC,eAAK,IAAM,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,EAAC,CAAC,CAAC,CAAC;QAC7F,qBAAqB;QACrB,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,mEAAY,CAAC,GAAG,CAAC,EAAE,2EAAoB,EAAE,CAAC;YACnF,SAAS,CAAC,eAAK,IAAM,KAAI,CAAC,SAAS,CAAC,WAAW,GAAG,KAAK,EAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,eAAK,IAAM,KAAI,CAAC,SAAS,CAAC,eAAe,GAAG,KAAK,EAAC,CAAC,CAAC,CAAC;QACpG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,eAAK,IAAM,KAAI,CAAC,SAAS,CAAC,WAAW,GAAG,KAAK,EAAC,CAAC,CAAC,CAAC;QAEhG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,eAAK,IAAM,IAAI,KAAI,CAAC,WAAW,EAAE;YAAE,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC;SAAE,CAAC,CAAC,CAAC,CAAC;QACvH,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,eAAK,IAAM,IAAI,KAAI,CAAC,WAAW,EAAE;YAAE,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC;SAAE,CAAC,CAAC,CAAC,CAAC;QAC/G,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,eAAK,IAAM,IAAI,KAAI,CAAC,WAAW,EAAE;YAAE,KAAI,CAAC,WAAW,CAAC,GAAG,GAAG,KAAK,CAAC;SAAE,CAAC,CAAC,CAAC,CAAC;QAC7G,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,eAAK,IAAM,IAAI,KAAI,CAAC,WAAW,EAAE;YAAE,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC;SAAE,EAAC,CAAC,CAAC;QACrH,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,SAAS,CAAC,eAAK,IAAM,IAAI,KAAI,CAAC,WAAW,EAAE;YAAE,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC;SAAE,EAAC,CAAC,CAAC;QAGpH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CACxC,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,EACtB,gEAAS,CAAC,kBAAQ;YACd,YAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,QAAQ,CAAC;QAAjD,CAAiD,CAAC,CACzD,CAAC;QACF,8DAA8D;QAC9D,qFAAqF;QACrF,IAAI;QAEJ,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,SAAS,CACvD,eAAK;YACD,IAAI,KAAK,EAAE;gBACP,+CAA+C;gBAC/C,0CAA0C;gBAC1C,IAAI;gBACJ,KAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,yBAAyB;gBACzB,qBAAqB;gBACrB,IAAI,KAAI,CAAC,SAAS,EAAE;oBAChB,IAAI,KAAI,CAAC,SAAS,CAAC,WAAW,KAAK,KAAK,CAAC,WAAW,EAAE;wBAClD,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;qBAChD;iBACJ;qBAAM;oBACH,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;iBAChD;gBACD,KAAI,CAAC,SAAS,GAAG,+DAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAClD,KAAI,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,kBAAkB,GAAG,MAAM,CAAC,CAAC;gBACvG,KAAI,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC;gBAEhD,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBAC1D,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;gBAChE,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;gBACjE,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;gBAE7D,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAClE,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAC1D,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACxD,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACjE,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aAEnE;iBAAM;gBACH,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACzB;QACL,CAAC,EACD,gBAAM,IAAM,CAAC,EACb,cAAQ,CAAC,CACZ,CAAC;IACN,CAAC;IACD,uCAAW,GAAX;QACI,IAAI,IAAI,CAAC,YAAY;YAAE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QACvD,IAAI,IAAI,CAAC,WAAW;YAAE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;IACzD,CAAC;IACD,wCAAY,GAAZ;QAAA,iBASC;QARG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CACxC,eAAK;YACD,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;gBACvD,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACvE;QACL,CAAC,CACJ,CAAC;IACN,CAAC;IAED,yCAAa,GAAb,UAAc,EAAW;QACrB,yBAAyB;QACzB,sCAAsC;QACtC,UAAU;QACV,oCAAoC;QACpC,GAAG;QACH,OAAO,IAAI,+DAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAC3D,IAAI,CAAC,SAAS,CAAC,qBAAqB,EAAE,IAAI,CAAC,SAAS,CAAC,wBAAwB,EAAC,CAAC,CAAC,CAAC;IACzF,CAAC;IAED,uCAAW,GAAX,UAAY,CAAM;QACd,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,qCAAS,GAAT;QACI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACjC,IAAI,cAAc,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnD,IAAI,cAAc,IAAI,IAAI,EAAE;YACxB,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChB,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aAC3B;SACJ;IACL,CAAC;IAED,sCAAU,GAAV,UAAW,MAAe;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACjC,IAAI,EAAE,GAAW,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/C,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACnC,IAAI,EAAE,IAAI,IAAI,EAAE;YACZ,IAAI,MAAM,EAAE;gBACR,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;aAC9B;iBAAM;gBACH,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;gBAC/B,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;aACf;SACJ;aAAM;YACH,IAAI,MAAM,EAAE;gBACR,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACrB,EAAE,GAAG,CAAC,CAAC;aACV;iBAAM;gBACH,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClB,EAAE,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;aACvB;SAEJ;QACD,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,0CAAc,GAAd;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,yCAAa,GAAb;QACI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,oCAAQ,GAAR,UAAS,EAAW;QAChB,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACjC,IAAI,EAAE,GAAW,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/C,IAAI,KAAK,GAAY,KAAK,CAAC;QAC3B,IAAI,EAAE,IAAI,IAAI,EAAE;YACZ,IAAI,EAAE,EAAE;gBACJ,IAAI,EAAE,GAAG,CAAC,EAAE;oBACR,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;oBACjB,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;oBACtB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;oBACZ,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;oBACb,KAAK,GAAG,IAAI,CAAC;iBAChB;aACJ;iBAAM;gBACH,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrB,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;oBACjB,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;oBACtB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;oBACZ,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;oBACb,KAAK,GAAG,IAAI,CAAC;iBAChB;aACJ;YACD,IAAI,KAAK,EAAE;gBACP,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;aAC9B;SACJ;IACL,CAAC;IAED,kCAAM,GAAN;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAED,oCAAQ,GAAR;QACI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAoBC;QAnBG,IAAI,EAAE,GAAG,+DAAS,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACnD,EAAE,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,GAAG,IAAI,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC;QACnF,EAAE,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAC1C,eAAK;YACD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC9B,qBAAqB;YACrB,gDAAgD;YAChD,qBAAqB;YACrB,0CAA0C;YAC1C,qCAAqC;YACrC,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,IAAI,KAAK,CAAC,WAAW,EAAE;gBACnB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACvC;QACL,CAAC,EACD,gBAAM,IAAM,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAC7C,cAAQ,CAAC,CACZ,CAAC;IACN,CAAC;IACD,yCAAa,GAAb,UAAc,QAAgB;QAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC;;gBA5P2B,wEAAc;gBACtB,sDAAM;;IAZjB,iBAAiB;QAL7B,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,qKAAwC;;SAE3C,CAAC;+EAY8B,wEAAc;YACtB,sDAAM;OAZjB,iBAAiB,CAwQ7B;IAAD,wBAAC;CAAA;AAxQ6B;;;;;;;;;;;;;;;;;;AC1CmB;AAWjD;IAAA;IAgCA,CAAC;4BAhCY,mBAAmB;IAiB9B,8CAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,OAAO;YACjB,IAAI,CAAC,OAAO,CAAC,MAAM;YACnB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IAED,0CAAY,GAAZ;QAAA,iBAGC;QAFC,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;aACpC,GAAG,CAAC,eAAK,IAAI,YAAI,CAAC,UAAU,CAAC,KAAK,EAAE,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAlD,CAAkD,CAAC,CAAC;IACtE,CAAC;IAEO,wCAAU,GAAlB,UAAmB,IAAY,EAAE,MAAW;QAC1C,OAAO,qBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;IACzD,CAAC;;IA5BuB,iCAAa,GAAG;QACtC,UAAU,EAAE,cAAM,+BAAwB,EAAxB,CAAwB;QAC1C,WAAW,EAAE,UAAC,MAAM,IAAK,yCAAkC,GAAG,MAAM,CAAC,cAAc,EAA1D,CAA0D;QACnF,WAAW,EAAE,UAAC,MAAM,IAAK,iDAA0C,GAAG,MAAM,CAAC,cAAc,EAAlE,CAAkE;QAC3F,SAAS,EAAE,UAAC,MAAM,IAAK,kCAA2B,GAAG,MAAM,CAAC,eAAe,EAApD,CAAoD;QAC3E,OAAO,EAAE,UAAC,MAAM,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc;QACnC,aAAa,EAAE,UAAC,MAAM,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc;QACzC,YAAY,EAAE,UAAC,MAAM,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc;QACxC,kBAAkB,EAAE,UAAC,MAAM,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc;QAC9C,iBAAiB,EAAE,UAAC,MAAM,IAAK,aAAM,CAAC,OAAO,EAAd,CAAc;KAC9C,CAAC;IAGF;QADC,2DAAK,EAAE;;wDACoD;IAfjD,mBAAmB;QAR/B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,8IAIT;SACF,CAAC;OACW,mBAAmB,CAgC/B;IAAD,0BAAC;CAAA;AAhC+B;;;;;;;;;;;;ACXhC,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;ACAS;AAIV;AAEQ;AACJ;AACe;AAQjF;IAII,+BACY,YAA0B,EAC3B,cAA8B;QAD7B,iBAAY,GAAZ,YAAY,CAAc;QAC3B,mBAAc,GAAd,cAAc,CAAgB;QALzC,gBAAW,GAAgB,IAAI,CAAC;QAChC,WAAM,GAAW,CAAC,CAAC;QACZ,gBAAW,GAAsB,IAAI,CAAC;QAoB7C,YAAO,GAAiB,IAAI,CAAC;QAhBzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;QACjD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;QACnE,qEAAqE;QACrE,0DAA0D;QAC1D,uDAAuD;QACvD,cAAc;QACd,2CAA2C;QAC3C,wDAAwD;QACxD,WAAW;QACX,OAAO;QACP,GAAG;IACP,CAAC;IAOD,wCAAQ,GAAR;QAAA,iBAaC;QAXG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,SAAS,CAC1D,cAAI;YACA,IAAI,IAAI,EAAE;gBACN,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;aACvB;YACD,qCAAqC;QACzC,CAAC,EACD,gBAAM,IAAM,CAAC,EACb,cAAQ,CAAC,CACZ,CAAC;IACN,CAAC;IACD,2CAAW,GAAX;QACI,IAAI,IAAI,CAAC,OAAO,EAAE;YAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;SAAE;IACrD,CAAC;IACD,2CAAW,GAAX,UAAY,CAAM;QACd,OAAO,+DAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IACD,oCAAoC;IACpC,gCAAgC;IAChC,iEAAiE;IACjE,qBAAqB;IACrB,4BAA4B;IAC5B,iEAAiE;IACjE,iBAAiB;IACjB,0BAA0B;IAC1B,+DAA+D;IAC/D,cAAc;IACd,yEAAyE;IACzE,mCAAmC;IACnC,GAAG;IAGH,4CAAY,GAAZ;QACI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,WAAC;YACrC,OAAO,CAAC,GAAG,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAQ,GAAR,UAAS,GAAW;QAChB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,WAAC;YACjD,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAE,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAS,GAAT,UAAU,GAAW;QACjB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,WAAC;YAClD,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAW,GAAX,UAAY,GAAW;QACnB,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,SAAS,CAC9C,eAAK,IAAM,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CACzC,CAAC;IACN,CAAC;IACD,2CAAW,GAAX,UAAY,GAAW;QACnB,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAC/C,eAAK,IAAM,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CACzC,CAAC;IACN,CAAC;IACD,0CAAU,GAAV,UAAW,GAAW;QAAtB,iBAKC;QAJG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CACrC,eAAK,IAAM,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC1D,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,2CAAW,GAAX,UAAY,GAAW;QAAvB,iBAKC;QAJG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CACtC,eAAK,IAAM,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC1D,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,6CAAa,GAAb,UAAc,KAAa,EAAE,OAAe;QAA5C,iBAIC;QAHG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,SAAS,CAC1D,eAAK,IAAM,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC1D,CAAC;IACN,CAAC;;gBArGyB,oEAAY;gBACX,wEAAc;;IAewB;QAAhE,+DAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,6DAAkB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAQ,6DAAkB;wDAAC;IArBlF,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,oLAA6C;;SAE9C,CAAC;+EAM4B,oEAAY;YACX,wEAAc;OANhC,qBAAqB,CA2GjC;IAAD,4BAAC;CAAA;AA3GiC;;;;;;;;;;;;;AChBlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,QAAQ,GAAG,wBAAwB,CAAC;AAC1C,IAAM,UAAU,GAAG,4BAA4B,CAAC;AAGvD,IAAY,gBAEX;AAFD,WAAY,gBAAgB;IACxB,6DAAW;IAAE,yDAAS;IAAE,6DAAW;IAAE,iEAAa;AACtD,CAAC,EAFW,gBAAgB,KAAhB,gBAAgB,QAE3B;AACD;IAAA;QACI,MAAC,GAAa,EAAE,CAAC;QACjB,MAAC,GAAa,EAAE,CAAC;IACrB,CAAC;IAAD,uBAAC;AAAD,CAAC;;AAED;IAaI,iBAAa,KAAY;QAZlB,WAAM,GAAW,CAAC,CAAC;QACnB,WAAM,GAAY,KAAK,CAAC;QACxB,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAY,KAAK,CAAC;QAC1B,aAAQ,GAAY,KAAK,CAAC;QAC1B,aAAQ,GAAY,KAAK,CAAC;QAC1B,WAAM,GAAY,KAAK,CAAC;QACxB,YAAO,GAAY,KAAK,CAAC;QACzB,mBAAc,GAAY,KAAK,CAAC;QAChC,oBAAe,GAAY,KAAK,CAAC;QACjC,eAAU,GAAY,KAAK,CAAC;QAC5B,gBAAW,GAAY,KAAK,CAAC;QAEhC,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;QACpC,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;QACtC,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;QACpC,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;QACrC,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;QAC5C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC;IAChD,CAAC;IACD,+BAAa,GAAb;QACI,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM;YACnB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;YACtD,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;YACzD,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;YACvD,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;YACnG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAEvE,CAAC;IACD,sBAAI,GAAJ;QACI,OAAO,IAAI,OAAO,CAAE,IAAI,CAAC,aAAa,EAAE,CAAE,CAAC;IAC/C,CAAC;;;;IACL,cAAC;CAAA;AAvCmB;AAyCpB;IACI,mBACW,QAAgB,EAChB,IAAY,EACZ,GAAW,EACX,IAAY,EACZ,IAAY,EACZ,OAAe;QALf,aAAQ,GAAR,QAAQ,CAAQ;QAChB,SAAI,GAAJ,IAAI,CAAQ;QACZ,QAAG,GAAH,GAAG,CAAQ;QACX,SAAI,GAAJ,IAAI,CAAQ;QACZ,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAQ;IAE1B,CAAC;IACD,wBAAI,GAAJ;QACI,OAAO,IAAI,SAAS,CAChB,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAClC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;;;;;;;;;IACL,gBAAC;CAAA;AAfqB;AAgBtB;IACI,oBACW,iBAAyB,EACzB,IAAY,EACZ,OAAe,EACf,WAAmB,EACnB,QAAgB,EAChB,qCAA6C,EAC7C,2BAAmC,EACnC,0BAAkC;IACzC,cAAc;IACP,kBAA0B;IACjC,4BAA4B;IACrB,eAAuB;IAC9B,4BAA4B;IACrB,mBAA2B;IAClC,sBAAsB;IACf,cAAsB,EACtB,GAAW,EACX,IAAY,EACZ,WAAoB,EACpB,OAAoB;IAC3B,mEAAmE;IACnE,oBAAoB;IACpB,MAAM;IACC,wBAAgC;IACvC,IAAI;IACG,qBAA6B;IACpC,MAAM;IACC,sBAA8B;IACrC,sBAAsB;IACf,qBAA6B;IACpC,iBAAiB;IACV,MAAc;QA/Bd,sBAAiB,GAAjB,iBAAiB,CAAQ;QACzB,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAQ;QACf,gBAAW,GAAX,WAAW,CAAQ;QACnB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,0CAAqC,GAArC,qCAAqC,CAAQ;QAC7C,gCAA2B,GAA3B,2BAA2B,CAAQ;QACnC,+BAA0B,GAA1B,0BAA0B,CAAQ;QAElC,uBAAkB,GAAlB,kBAAkB,CAAQ;QAE1B,oBAAe,GAAf,eAAe,CAAQ;QAEvB,wBAAmB,GAAnB,mBAAmB,CAAQ;QAE3B,mBAAc,GAAd,cAAc,CAAQ;QACtB,QAAG,GAAH,GAAG,CAAQ;QACX,SAAI,GAAJ,IAAI,CAAQ;QACZ,gBAAW,GAAX,WAAW,CAAS;QACpB,YAAO,GAAP,OAAO,CAAa;QAIpB,6BAAwB,GAAxB,wBAAwB,CAAQ;QAEhC,0BAAqB,GAArB,qBAAqB,CAAQ;QAE7B,2BAAsB,GAAtB,sBAAsB,CAAQ;QAE9B,0BAAqB,GAArB,qBAAqB,CAAQ;QAE7B,WAAM,GAAN,MAAM,CAAQ;IACzB,CAAC;IAED,yBAAI,GAAJ;QACI,IAAI,EAAE,GAAgB,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAE,IAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,OAAO,IAAI,UAAU,CACjB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,qCAAqC,EAC1C,IAAI,CAAC,2BAA2B,EAChC,IAAI,CAAC,0BAA0B;QAC/B,cAAc;QACd,IAAI,CAAC,kBAAkB;QACvB,4BAA4B;QAC5B,IAAI,CAAC,eAAe;QACpB,4BAA4B;QAC5B,IAAI,CAAC,mBAAmB;QACxB,sBAAsB;QACtB,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,WAAW,EAAE,EAAE,EACpB,IAAI,CAAC,wBAAwB,EAC7B,IAAI,CAAC,qBAAqB,EAC1B,IAAI,CAAC,sBAAsB,EAC3B,IAAI,CAAC,qBAAqB,EAC1B,IAAI,CAAC,MAAM,CACd,CAAC;IACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;;IACL,iBAAC;CAAA;AAlEsB;AAoEvB;IACI,sBAAmB,QAAoB,EAAS,KAAc;QAA3C,aAAQ,GAAR,QAAQ,CAAY;QAAS,UAAK,GAAL,KAAK,CAAS;IAC9D,CAAC;IACD,2BAAI,GAAJ;QACI,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChH,CAAC;;gBAJ4B,UAAU;gBAAgB,OAAO;;IAKlE,mBAAC;CAAA;AANwB;AAQzB;IACI,gCACW,IAAY,EACZ,IAAY,EACZ,GAAW,EACX,WAAmB,EACnB,QAAgB;QAJhB,SAAI,GAAJ,IAAI,CAAQ;QACZ,SAAI,GAAJ,IAAI,CAAQ;QACZ,QAAG,GAAH,GAAG,CAAQ;QACX,gBAAW,GAAX,WAAW,CAAQ;QACnB,aAAQ,GAAR,QAAQ,CAAQ;IAC3B,CAAC;;;;;;;;IACL,6BAAC;CAAA;AARkC;AAUnC;IAMI,0BAAY,GAA0B;QALtC,SAAI,GAAa,EAAE,CAAC;QACpB,SAAI,GAAa,EAAE,CAAC;QACpB,QAAG,GAAa,EAAE,CAAC;QACnB,gBAAW,GAAa,EAAE,CAAC;QAC3B,aAAQ,GAAa,EAAE,CAAC;QAGpB,IAAI,GAAG,EAAE;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACvD;IACL,CAAC;IACD,2CAAgB,GAAhB,UAAiB,MAAc;QAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACtB,IAAI,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC;QAC1B,sCAAsC;QACtC,IAAI,EAAE,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAChC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC5B;QACD,2CAA2C;QAC3C,IAAI,EAAE,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,GAAG,GAAa,EAAE,CAAC;QACvB,EAAE,CAAC,OAAO,CAAC,WAAC,IAAI,UAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC;QAC7B,OAAO,GAAG,CAAC;IACf,CAAC;;gBAvBe,sBAAsB;;IAwB1C,uBAAC;CAAA;AA9B4B;AAgC7B,4BAA4B;AAC5B,kBAAkB;AAClB,8BAA8B;AAC9B,sCAAsC;AACtC,uCAAuC;AACvC,+BAA+B;AAC/B,4CAA4C;AAC5C,GAAG;AAEH;IACI,2BACW,EAAW,EACX,EAAW,EACX,GAAY,EACZ,GAAY,EACZ,EAAW;QAJX,OAAE,GAAF,EAAE,CAAS;QACX,OAAE,GAAF,EAAE,CAAS;QACX,QAAG,GAAH,GAAG,CAAS;QACZ,QAAG,GAAH,GAAG,CAAS;QACZ,OAAE,GAAF,EAAE,CAAS;IAAI,CAAC;;;;;;;;IAC/B,wBAAC;CAAA;AAP6B;AAS9B;IACI,qBACW,EAAiB,EACjB,EAAiB,EACjB,GAAkB,EAClB,GAAkB,EAClB,EAAiB;QAJjB,OAAE,GAAF,EAAE,CAAe;QACjB,OAAE,GAAF,EAAE,CAAe;QACjB,QAAG,GAAH,GAAG,CAAe;QAClB,QAAG,GAAH,GAAG,CAAe;QAClB,OAAE,GAAF,EAAE,CAAe;IAAI,CAAC;;gBAJjB,YAAY;gBACZ,YAAY;gBACX,YAAY;gBACZ,YAAY;gBACb,YAAY;;IAChC,kBAAC;CAAA;AAPuB;AASxB;IACI,iCACW,UAA8B,EAC9B,KAAc;QADd,eAAU,GAAV,UAAU,CAAoB;QAC9B,UAAK,GAAL,KAAK,CAAS;IAAI,CAAC;;gBADN,iBAAiB;;;IAE7C,8BAAC;CAAA;AAJmC;AAMpC;IAGI,2BACI,EAA0B;QAH9B,eAAU,GAAgB,IAAI,CAAC;QAC/B,UAAK,GAAY,IAAI,CAAC;QAIlB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,EAAC,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,EAAC,KAAI,CAAC;QAClD,IAAI,EAAE,CAAC,UAAU,EAAE;YACf,IAAI,CAAC,UAAU,GAAG,IAAI,WAAW,CAC7B,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,EACvC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,EACvC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,EACxC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,EACxC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAC1C,CAAC;SACL;aAAM;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAC1B;IAEL,CAAC;IAED,4CAAgB,GAAhB,UAAiB,MAAc;QAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACtB,IAAI,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC;QAC1B,sCAAsC;QACtC,IAAI,EAAE,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAChC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC5B;QACD,2CAA2C;QAC3C,OAAO,IAAI,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;;gBA3BM,uBAAuB;;IA4BlC,wBAAC;CAAA;AAhC6B;AAkC9B;IAAA;IAkDA,CAAC;IAjDU,yBAAe,GAAtB,UAAuB,QAAyD;QAC5E,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,IAAI,CAAC;SACf;aAAM,IAAI,QAAQ,YAAY,YAAY,EAAE;YACzC,OAAO,IAAI,YAAY,CAAC,SAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;SACpH;aAAM,IAAI,QAAQ,YAAY,UAAU,EAAE;YACvC,IAAI,IAAE,GAAgB,EAAE,CAAC;YACzB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,YAAE,IAAM,IAAE,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3E,OAAO,IAAI,UAAU,CACjB,QAAQ,CAAC,iBAAiB,EAC1B,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,OAAO,EAChB,QAAQ,CAAC,WAAW,EACpB,QAAQ,CAAC,QAAQ,EACjB,QAAQ,CAAC,qCAAqC,EAC9C,QAAQ,CAAC,2BAA2B,EACpC,QAAQ,CAAC,0BAA0B;YACnC,cAAc;YACd,QAAQ,CAAC,kBAAkB;YAC3B,4BAA4B;YAC5B,QAAQ,CAAC,eAAe;YACxB,4BAA4B;YAC5B,QAAQ,CAAC,mBAAmB;YAC5B,sBAAsB;YACtB,QAAQ,CAAC,cAAc,EACvB,QAAQ,CAAC,GAAG,EACZ,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,WAAW,EAAE,IAAE,EACxB,QAAQ,CAAC,wBAAwB,EACjC,QAAQ,CAAC,qBAAqB,EAC9B,QAAQ,CAAC,sBAAsB,EAC/B,QAAQ,CAAC,qBAAqB,EAC9B,QAAQ,CAAC,MAAM,CAClB,CAAC;SACL;aAAM,IAAI,QAAQ,YAAY,OAAO,EAAE;YACpC,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC;SAChD;aAAM,IAAI,QAAQ,YAAY,SAAS,EAAE;YACtC,OAAO,IAAI,SAAS,CAChB,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,EAC9C,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;SAEvD;aAAM;YACH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC/C;IACL,CAAC;IACM,qBAAW,GAAlB,UAAmB,CAAM;QACrB,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,IAAI,EAAE,EAAE;YAAE,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAAE;aAAM;YAAE,OAAO,EAAE,GAAG,CAAC,CAAC;SAAE;IAC5E,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AChT0C;AACkC;AACd;AAQmC;AAC/C;AAGnD,iEAAiE;AAEjE;IAAA;QACW,kBAAa,GAAoB;YACpC,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE;YACzH,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE;YACnH,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE;YACrH,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE;SAChI,CAAC;QACK,oBAAe,GAAY,EAAE,CAAC;QAC9B,qBAAgB,GAAiB;YACpC,mBAAmB;YACnB,mBAAmB,EAAE,KAAK;YAC1B,SAAS,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;YAC1B,MAAM,EAAE;gBACJ,oEAAoE;gBACpE,KAAK,EAAE,CAAC,EAAE,CAAC;gBACX,KAAK,EAAE;oBACH;wBACI,EAAE,EAAE,UAAU;wBACd,QAAQ,EAAE,MAAM;wBAChB,KAAK,EAAE;4BACH,SAAS,EAAE,KAAK;4BAChB,GAAG,EAAC,EAAE;4BACN,GAAG,EAAC,GAAG;yBACV;wBACD,UAAU,EAAE;4BACR,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,iBAAiB;yBACjC;qBACJ;oBACD;wBACI,EAAE,EAAE,YAAY;wBAChB,QAAQ,EAAE,MAAM;wBAChB,SAAS,EAAE;4BACP,OAAO,EAAE,KAAK;4BACd,6BAA6B;yBAChC;wBACD,KAAK,EAAE;4BACH,SAAS,EAAE,kBAAkB;4BAC7B,GAAG,EAAE,CAAC;4BACN,GAAG,EAAE,IAAI;yBACZ;wBACD,UAAU,EAAE;4BACR,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,KAAK;yBACrB;qBACJ;oBACD;wBACI,EAAE,EAAE,aAAa;wBACjB,QAAQ,EAAE,MAAM;wBAChB,SAAS,EAAE;4BACP,OAAO,EAAE,KAAK;4BACd,6BAA6B;yBAChC;wBACD,KAAK,EAAE;4BACH,SAAS,EAAE,mBAAmB;4BAC9B,GAAG,EAAE,CAAC;4BACN,GAAG,EAAE,IAAI;yBACZ;wBACD,UAAU,EAAE;4BACR,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,SAAS;yBACzB;qBACJ;oBACD;wBACI,EAAE,EAAE,WAAW;wBACf,QAAQ,EAAE,MAAM;wBAChB,SAAS,EAAE;4BACP,OAAO,EAAE,KAAK;4BACd,6BAA6B;yBAChC;wBACD,KAAK,EAAE;4BACH,SAAS,EAAE,OAAO;4BAClB,GAAG,EAAE,CAAC;4BACN,GAAG,EAAE,GAAG;yBACX;wBACD,UAAU,EAAE;4BACR,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,mBAAmB;yBACnC;qBACJ;iBACJ;aACJ;SACJ,CAAC;QACK,oBAAe,GAAY;YAC9B;gBACI,2CAA2C;gBAC3C,WAAW,EAAE,KAAK;aAKrB;YACD;gBACI,wCAAwC;gBACxC,WAAW,EAAE,kBAAkB;aAKlC;YACD;gBACI,uCAAuC;gBACvC,WAAW,EAAE,mBAAmB;aAKnC;YACD;gBACI,uCAAuC;gBACvC,WAAW,EAAE,OAAO;aAKvB;SACJ,CAAC;QACK,oBAAe,GAAG,IAAI,CAAC;QACvB,kBAAa,GAAG,MAAM,CAAC;IAElC,CAAC;IAAD,wBAAC;AAAD,CAAC;;AAEM,IAAM,eAAe,GAAW,GAAG,CAAC;AAG3C;IAMI,sBAAoB,IAAgB,EACxB,cAA8B;QADtB,SAAI,GAAJ,IAAI,CAAY;QACxB,mBAAc,GAAd,cAAc,CAAgB;QANnC,gCAA2B,GAAG,CAAC,CAAC;QAChC,wBAAmB,GAAiC,IAAI,oDAAe,CAAc,IAAI,CAAC,CAAC;QAC3F,gBAAW,GAAsB,IAAI,iBAAiB,EAAE,CAAC;QACzD,iBAAY,GAAsC,IAAI,oDAAe,CAAmB,IAAI,sEAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;QAIvH,IAAI,CAAC,GAAY,EAAE,CAAC;QAAE,IAAI,EAAE,GAAa,EAAE,CAAC;QAAC,IAAI,EAAE,GAAa,EAAE,CAAC;QAAC,IAAI,EAAE,GAAa,EAAE,CAAC;QAAC,IAAI,EAAE,GAAa,EAAE,CAAC;QACjH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,eAAe,EAAE,CAAC,EAAE,EAAE;YACvC,sCAAsC;YACtC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,0DAA0D;YAC7F,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC1D;QACD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,CAAC,CAAC;QACrC,8EAA8E;QAC9E,mDAAmD;QACnD,8EAA8E;QAC9E,mDAAmD;QACnD,8EAA8E;QAC9E,mDAAmD;QACnD,8EAA8E;QAC9E,mDAAmD;QACnD,uEAAuE;QACvE,8CAA8C;QAC9C,sDAAsD;QACtD,GAAG;QACH,qEAAqE;IAEzE,CAAC;IAED,sCAAe,GAAf;QAAA,iBAQC;QAPG,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,WAAC;YACnD,IAAI,CAAC,EAAE;gBACH,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;gBACzC,IAAI,EAAE,GAAG,IAAI,sEAAgB,CAAC,CAAC,CAAC,CAAC;gBACjC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC9B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAGM,oCAAa,GAApB;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5D,mDAAmD;YACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;aACnD;SACJ;IACL,CAAC;IACD,+BAAQ,GAAR,UAAS,CAAS;QACd,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;IACM,sCAAe,GAAtB,UAAuB,CAAc;QACjC,IAAI,CAAC,EAAE;YACH,+DAA+D;YAC/D,+CAA+C;YAC/C,gEAAgE;YAChE,+CAA+C;YAC/C,wDAAwD;YACxD,+CAA+C;YAC/C,iEAAiE;YACjE,+CAA+C;YAC/C,IAAI,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAC3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC3B,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAC3F;YACD,mFAAmF;YACnF,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,gCAA+B;YACpF,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,iCAAgC;YACrF,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,yBAAwB;YAC7E,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,kCAAiC;YACtF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACpC;IACL,CAAC;;gBA3EyB,+DAAU;gBACR,+DAAc;;IAPjC,YAAY;QADxB,gEAAU,EAAE;+EAOiB,+DAAU;YACR,+DAAc;OAPjC,YAAY,CAmFxB;IAAD,mBAAC;CAAA;AAnFwB;;;;;;;;;;;;;;;;;;;;;;;AC7IkB;AACoB;AACgB;AACzB;AACX;AAMR;AAEnC,IAAM,WAAW,GAAG;IAChB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACrB,cAAc,EAAE,kBAAkB;KACrC,CAAC;CACL;AAGD;IAYI,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAXpC,uFAAuF;QACvF,cAAS,GAAgC,IAAI,oDAAe,CAAa,IAAI,CAAC,CAAC;QAC/E,cAAS,GAAiC,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QACpE,eAAU,GAA6B,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QACjE,iBAAY,GAAmB,IAAI,CAAC;QACpC,oDAAoD;QACpD,WAAM,GAAG,gEAAS,CAA0B,gEAAU,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,WAAC;YAC9D,IAAI,GAAG,GAAG,IAAI,uEAAiB,CAAC,CAAC,CAAC,CAAC;YACnC,OAAO,GAAG,CAAC;QACf,CAAC,CAAC,CAAC,CAAC;QAGA,qDAAqD;QACrD,2DAA2D;IAC/D,CAAC;IAED,mBAAmB;IACnB,8EAA8E;IAC9E,2DAA2D;IAC3D,QAAQ;IACR,GAAG;IAEH,sCAAsC;IACtC,6BAA6B;IAC7B,2CAA2C;IAC3C,mDAAmD;IACnD,kBAAkB;IAClB,kGAAkG;IAClG,mCAAmC;IACnC,mCAAmC;IACnC,sDAAsD;IACtD,eAAe;IACf,8BAA8B;IAC9B,kDAAkD;IAClD,eAAe;IACf,YAAY;IACZ,sGAAsG;IACtG,sHAAsH;IACtH,OAAO;IACP,QAAQ;IACR,GAAG;IAEI,6BAAI,GAAX,UAAY,OAAoB;QAC5B,uCAAuC;IAC3C,CAAC;IAED,+CAA+C;IAC/C,sBAAsB;IACtB,yDAAyD;IACzD,iFAAiF;IACjF,YAAY;IACZ,GAAG;IAEH,kDAAkD;IAClD,+CAA+C;IAC/C,oDAAoD;IACpD,QAAQ;IACR,IAAI;IAGG,oCAAW,GAAlB;QACI,IAAM,GAAG,GAAG,8DAAQ,GAAG,YAAY,CAAC;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC,CAAC,IAAI,CAC/B,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAA1B,CAA0B,CAAC,EACpC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,aAAa,CAAC,CAAC,CACnD,CAAC;IACN,CAAC;IACM,mCAAU,GAAjB;QACI,IAAM,GAAG,GAAG,8DAAQ,GAAG,UAAU,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,YAAE,IAAM,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,mBAAmB;QACnB,4BAA4B;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC,CAAC,IAAI,CAC/B,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,YAAY,CAAC,EAAzB,CAAyB,CAAC,EACnC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,YAAY,CAAC,CAAC,CAElD,CAAC;IACN,CAAC;IAED,mCAAU,GAAV;QACI,IAAM,GAAG,GAAG,8DAAQ,GAAG,YAAY,CAAC;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC,CAAC,IAAI,CAC/B,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,YAAY,CAAC,EAAzB,CAAyB,CAAC,EACnC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,YAAY,CAAC,CAAC,CAClD,CAAC;IACN,CAAC;IACD,iCAAQ,GAAR;QACI,IAAM,GAAG,GAAG,8DAAQ,GAAG,UAAU,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC,CAAC,IAAI,CAC/B,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAvB,CAAuB,CAAC,EACjC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,UAAU,CAAC,CAAC,CAChD,CAAC;IACN,CAAC;IACD,uCAAc,GAAd;QAAA,iBAIC;QAHG,IAAI,CAAC,WAAW,EAAE,CAAC,SAAS,CACxB,eAAK,IAAM,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC3C,CAAC;IACN,CAAC;IACD,qCAAY,GAAZ;QAAA,iBAIC;QAHG,IAAI,CAAC,QAAQ,EAAE,CAAC,SAAS,CACrB,eAAK,IAAM,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,6DAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CACzD,CAAC;IACN,CAAC;IACD,sCAAa,GAAb;QAAA,iBAWC;QAVG,qDAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,SAAS,CACnD,UAAC,EAAS;gBAAT,wDAAS,EAAR,UAAE,EAAE,WAAG;YACL,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACzB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,6DAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YACtC,+DAA+D;QACnE,CAAC,EACD,gBAAM,IAAM,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,EACjD,cAAQ,CAAC,CACZ,CAAC;IACN,CAAC;IAED,4CAAmB,GAAnB,UAAoB,eAAuB;QACvC,IAAI,GAAG,GAAG,8DAAQ,IAAG,mBAAiB,eAAiB,EAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,GAAG,CAAC,CAAC,IAAI,CAC5C,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,EAAlC,CAAkC,CAAC,EAC5C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,qBAAqB,CAAC,CAAC,CAC3D,CAAC;IACN,CAAC;IAED,yCAAgB,GAAhB,UAAiB,KAAa;QAC1B,IAAI,GAAG,GAAG,8DAAQ,IAAG,kCAAgC,KAAO,EAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC,CAAC,IAAI,CAClC,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAA/B,CAA+B,CAAC,EACzC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,kBAAkB,CAAC,CAAC,CACxD,CAAC;IACN,CAAC;IAED,wCAAe,GAAf,UAAgB,KAAa;QACzB,IAAI,GAAG,GAAG,8DAAQ,IAAG,iCAA+B,KAAO,EAAC;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC,CAAC,IAAI,CAClC,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAA9B,CAA8B,CAAC,EACxC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,iBAAiB,CAAC,CAAC,CACvD,CAAC;IACN,CAAC;IAED,yCAAgB,GAAhB,UAAiB,KAAa,EAAE,IAAY;QACxC,IAAI,GAAG,GAAG,8DAAQ,IAAG,+BAA6B,KAAK,WAAM,IAAM,EAAC;QACpE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,CAAC,CAAC,IAAI,CACtC,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAA/B,CAA+B,CAAC,EACzC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,kBAAkB,CAAC,CAAC,CACxD,CAAC;IACN,CAAC;IACD,uCAAuC;IACvC,qCAAY,GAAZ;QACI,IAAI,GAAG,GAAG,8DAAQ,GAAG,yBAAyB,CAAC;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,CAAC,CAAC,IAAI,CACpC,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAA3B,CAA2B,CAAC,EACrC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,cAAc,CAAC,CAAC,CACpD,CAAC;IACN,CAAC;IACD,4CAAmB,GAAnB,UAAoB,QAAe;QAC/B,IAAI,GAAG,GAAG,8DAAQ,IAAG,kCAAgC,QAAU,EAAC;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC,CAAC,IAAI,CAClC,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,EAAlC,CAAkC,CAAC,EAC5C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,qBAAqB,CAAC,CAAC,CAC3D,CAAC;IACN,CAAC;IAED,6CAAoB,GAApB,UAAqB,eAAuB,EAAE,UAA4B;QACtE,IAAI,GAAG,GAAG,8DAAQ,IAAG,mBAAiB,eAAiB,EAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAmB,GAAG,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,IAAI,CACtE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC,CACnE,CAAC;IACN,CAAC;IAED,iCAAQ,GAAR;QACI,IAAI,GAAG,GAAG,8DAAQ,GAAG,kBAAkB,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC,CAAC,IAAI,CAClC,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAvB,CAAuB,CAAC,EACjC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,UAAU,CAAC,CAAC,CAChD,CAAC,oGAAmG;IACzG,CAAC;IAED,oCAAW,GAAX;QACI,IAAI,GAAG,GAAG,8DAAQ,GAAG,oBAAoB,CAAC;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,CAAC,CAAC,IAAI,CACtC,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAA1B,CAA0B,CAAC,EACpC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,aAAa,CAAC,CAAC,CACnD,CAAC;IACN,CAAC;IAED,qCAAY,GAAZ,UAAa,IAAgB;QACzB,IAAI,GAAG,GAAG,8DAAQ,GAAG,oBAAoB,CAAC;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAa,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,IAAI,CAC1D,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,CACrD,CAAC;IACN,CAAC;IAED,+BAAM,GAAN,UAAO,GAAW;QACd,IAAI,GAAG,GAAG,8DAAQ,IAAG,2BAAyB,GAAK,EAAC;QACpD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,CAAC,CAAC,IAAI,CACtC,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAArB,CAAqB,CAAC,EAC/B,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,QAAQ,CAAC,CAAC,CAC9C,CAAC;IACN,CAAC;IAED,gCAAO,GAAP,UAAQ,IAAY;QAChB,IAAI,GAAG,GAAG,8DAAQ,IAAG,4BAA0B,IAAM,EAAC;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,CAAC,CAAC,IAAI,CACtC,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAtB,CAAsB,CAAC,EAChC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,SAAS,CAAC,CAAC,CAC/C,CAAC;IACN,CAAC;IAED,8CAAqB,GAArB;QACI,IAAI,GAAG,GAAG,8DAAQ,GAAG,0BAA0B,CAAC;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,GAAG,CAAC,CAAC,IAAI,CAClD,0DAAG,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,EAApC,CAAoC,CAAC,EAC9C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,uBAAuB,CAAC,CAAC,CAC7D,CAAC;IACN,CAAC;IACD;;;;;OAKG;IACK,oCAAW,GAAnB,UAAuB,SAAuB,EAAE,MAAU;QAAnC,mDAAuB;QAC1C,OAAO,UAAC,KAAU;YAEd,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,8DAA8D;YAC9D,OAAO,CAAC,GAAG,CAAI,SAAS,iBAAY,KAAK,CAAC,OAAS,CAAC,CAAC;YAErD,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QAC3B,CAAC,CAAC;IACN,CAAC;;gBAhOyB,+DAAU;;IAZ3B,cAAc;QAD1B,gEAAU,EAAE;+EAaiB,+DAAU;OAZ3B,cAAc,CA6O1B;IAAD,qBAAC;CAAA;AA7O0B;;;;;;;;;;;;ACnB3B,iBAAiB,qBAAuB,iB;;;;;;;;;;;;ACAxC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","module.exports = \"<div class=\\\"unknown-theme\\\">\\r\\n  <app-navbar></app-navbar>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\"> <h3>Calibration curves</h3> </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <!--<div class=\\\"row\\\">\\r\\n                <ul class=\\\"ccurves\\\">\\r\\n                    <li *ngFor=\\\"let curve of CCurves\\\"\\r\\n                        [class.selected]=\\\"curve === selectedCurve\\\"\\r\\n                        (click)=\\\"onSelect(curve)\\\">\\r\\n                        {{curve.name}}\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>-->\\r\\n            <div class=\\\"row\\\">\\r\\n                <div *ngIf=\\\"data$|async as data\\\" class=\\\"card-body bg-light border-top\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-9\\\">\\r\\n                            <!--<h6>{{selectedCurve.name}}</h6>-->\\r\\n                            <select [(ngModel)]=\\\"selectedCurve\\\" (change)=\\\"onSelect($event.target.value)\\\"\\r\\n                                    class=\\\"browser-default custom-select\\\"\\r\\n                                    [disabled]=\\\"editCurve\\\">\\r\\n                                <option *ngFor=\\\"let curve of CCurves\\\" [ngValue]=\\\"curve\\\">{{curve.name}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-3\\\">\\r\\n                            <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"EditClic()\\\" [hidden]=\\\"editCurve\\\">\\r\\n                                Edit\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div *ngIf=\\\"currentData\\\" class=\\\"container rounded border bg-light m-1\\\">\\r\\n                            <div class=\\\"row h5\\\">\\r\\n                                <div class=\\\"col\\\">Value</div>\\r\\n                                <div class=\\\"col\\\">Voltage, V</div>\\r\\n                                <div class=\\\"col\\\">Force, N</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row border-top\\\">\\r\\n                                <div class=\\\"col\\\">average</div>\\r\\n                                <div class=\\\"col\\\">{{currentData.avgVoltage| number:\\\"1.0-3\\\"}}</div>\\r\\n                                <div class=\\\"col\\\">{{currentData.avgForce| number:\\\"1.0-3\\\"}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row border-top font-weight-light\\\">\\r\\n                                <div class=\\\"col\\\">actual</div>\\r\\n                                <div class=\\\"col\\\">{{currentData.currVoltage| number:\\\"1.0-3\\\"}}</div>\\r\\n                                <div class=\\\"col\\\">{{currentData.currForce| number:\\\"1.0-3\\\"}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"editCurve\\\" class=\\\"row\\\">\\r\\n                        <!--*ngIf=\\\"edit\\\"-->\\r\\n                        <div class=\\\"col-12 col-sm-6 pr-sm-0 col-md-12 pr-md-3 col-xl-6 pr-xl-0\\\">\\r\\n                            <div class=\\\"btn-group btn-block\\\">\\r\\n                                <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\"\\r\\n                                        (click)=\\\"InserRowBefore()\\\" title=\\\"Insert row above\\\">\\r\\n                                    <i class=\\\"fa fa-plus-circle\\\"></i><i class=\\\"fa fa-arrow-up\\\"></i>\\r\\n                                </button>\\r\\n                                <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\"\\r\\n                                        (click)=\\\"InserRowAfter()\\\" title=\\\"Insert row below\\\">\\r\\n                                    <i class=\\\"fa fa-plus-circle\\\"></i><i class=\\\"fa fa-arrow-down\\\"></i>\\r\\n                                </button>\\r\\n                                <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" [disabled]=\\\"selectedRow.Nr==null\\\"\\r\\n                                        (click)=\\\"MoveUp()\\\" title=\\\"Move selected row up\\\">\\r\\n                                    <i class=\\\"fa fa-long-arrow-up\\\"></i>\\r\\n                                </button>\\r\\n                                <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" [disabled]=\\\"selectedRow.Nr==null\\\"\\r\\n                                        (click)=\\\"MoveDown()\\\" title=\\\"Move selected row down\\\">\\r\\n                                    <i class=\\\"fa fa-long-arrow-down\\\"></i>\\r\\n                                </button>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"col-12 col-sm-6 pl-sm-0 col-md-12 pl-md-3 col-xl-6 pl-xl-0\\\">\\r\\n                            <div class=\\\"btn-group btn-block\\\">\\r\\n                                <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" [disabled]=\\\"selectedRow.Nr==null\\\"\\r\\n                                        (click)=\\\"DeleteRow()\\\" title=\\\"Dete row\\\">\\r\\n                                    Delete\\r\\n                                </button>\\r\\n                                <button class=\\\"btn btn-danger\\\" type=\\\"button\\\"\\r\\n                                        (click)=\\\"SaveData()\\\" title=\\\"Save curve\\\">\\r\\n                                    Save\\r\\n                                </button>\\r\\n                                <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\"\\r\\n                                        (click)=\\\"CancelEdit()\\\" title=\\\"Cancel\\\">\\r\\n                                    Cancel\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <table *ngIf=\\\"data$|async as data\\\" class=\\\"table mt-4\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th scope=\\\"col\\\">Voltage, V</th>\\r\\n                                <th scope=\\\"col\\\">Force, N</th>\\r\\n                                <th *ngIf=\\\"editCurve\\\" scope=\\\"col\\\"></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let r of data\\\" (click)=\\\"onSelectRow(r)\\\">\\r\\n                                <td *ngIf=\\\"r.Nr !== selectedRow.Nr\\\">{{r.x| number}}</td>\\r\\n                                <td *ngIf=\\\"r.Nr === selectedRow.Nr\\\"><input type=\\\"number\\\" [(ngModel)]=\\\"selectedRow.x\\\" class=\\\"form-control\\\" /></td>\\r\\n                                <td *ngIf=\\\"r.Nr !== selectedRow.Nr\\\">{{r.y| number:'1.1-1'}}</td>\\r\\n                                <td *ngIf=\\\"r.Nr === selectedRow.Nr\\\"><input type=\\\"number\\\" [(ngModel)]=\\\"selectedRow.y\\\" class=\\\"form-control\\\" /></td>\\r\\n                                <td *ngIf=\\\"r.Nr !== selectedRow.Nr && editCurve\\\"><i class=\\\"fa fa-pencil-square fa-lg pointer\\\"></i></td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<!--\\\"load\\\": sd[1], \\\"frictionforce\\\":sd[2], \\\"rotationrate\\\": sd[3], \\\"temperature\\\": sd[4]-->\\r\\n<div class=\\\"row\\\">\\r\\n    <div *ngIf=\\\"{status:signalsService.lastState$|async,settings:signalsService.settings$ |async} as ts\\\" class=\\\"container rounded border bg-light m-1\\\">\\r\\n        <!--\\\"load\\\": sd[1], \\\"frictionforce\\\":sd[2], \\\"rotationrate\\\": sd[3], \\\"temperature\\\": sd[4]-->\\r\\n        <div *ngIf=\\\"ts.status && ts.settings\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                Experiment:\\r\\n                <span *ngIf=\\\"ts.status.status>0\\\">{{ts.settings.output_file}}</span>\\r\\n                <i *ngIf=\\\"ts.status.status==0\\\" class=\\\"fa fa-window-close\\\"></i>\\r\\n                <i *ngIf=\\\"ts.status.status==1\\\" class=\\\"fa fa-thumbs-up\\\"></i>\\r\\n                <i *ngIf=\\\"ts.status.status==2\\\" class=\\\"fa fa-edit\\\"></i>\\r\\n                <i *ngIf=\\\"ts.status.status==3\\\" class=\\\"fa fa-archive\\\"></i>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                RPM\\r\\n                <i *ngIf=\\\"!ts.status.VFD_on\\\" class=\\\"fa fa-power-off\\\"></i>\\r\\n                <span *ngIf=\\\"ts.status.VFD_on\\\">\\r\\n                    <i *ngIf=\\\"!ts.status.rpmRegAuto\\\" class=\\\"fa fa-hand-paper\\\"></i>\\r\\n                    <span *ngIf=\\\"ts.status.rpmRegAuto\\\">\\r\\n                        <i *ngIf=\\\"ts.status.rpmRegTimedOut\\\" class=\\\"fa fa-clock\\\"></i>\\r\\n                        <i *ngIf=\\\"(!ts.status.rpmRegTimedOut) && ts.status.rpmReg\\\" class=\\\"fa fa-cog fa-spin\\\"></i>\\r\\n                        <i *ngIf=\\\"(!ts.status.rpmRegTimedOut) && (!ts.status.rpmReg)\\\" class=\\\"fa fa-cog\\\"></i>\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                Load\\r\\n                <i *ngIf=\\\"!ts.status.load_on\\\" class=\\\"fa fa-power-off\\\"></i>\\r\\n                <span *ngIf=\\\"ts.status.load_on\\\">\\r\\n                    <i *ngIf=\\\"!ts.status.loadRegAuto\\\" class=\\\"fa fa-hand-paper\\\"></i>\\r\\n                    <span *ngIf=\\\"ts.status.loadRegAuto\\\">\\r\\n                        <i *ngIf=\\\"ts.status.loadRegTimedOut\\\" class=\\\"fa fa-clock\\\"></i>\\r\\n                        <i *ngIf=\\\"(!ts.status.loadRegTimedOut) && ts.status.loadReg\\\" class=\\\"fa fa-cog fa-spin\\\"></i>\\r\\n                        <i *ngIf=\\\"(!ts.status.loadRegTimedOut) && (!ts.status.loadReg)\\\" class=\\\"fa fa-cog\\\"></i>\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                Friction\\r\\n                <i *ngIf=\\\"ts.status.stopFlim\\\" class=\\\"fa fa-exclamation-triangle\\\"></i>\\r\\n                <i *ngIf=\\\"!ts.status.stopFlim\\\" class=\\\"fa fa-check-circle\\\"></i>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                Temperature\\r\\n                <i *ngIf=\\\"ts.status.stopTlim\\\" class=\\\"fa fa-exclamation-triangle\\\"></i>\\r\\n                <i *ngIf=\\\"!ts.status.stopTlim\\\" class=\\\"fa fa-check-circle\\\"></i>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    \\r\\n    <div *ngIf=\\\"{settings:signalsService.settings$|async,state:signalsService.lastState$|async} as totSTATE\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"container rounded border bg-light\\\">\\r\\n            <!--\\\"load\\\": sd[1], \\\"frictionforce\\\":sd[2], \\\"rotationrate\\\": sd[3], \\\"temperature\\\": sd[4]-->\\r\\n            <app-status-row></app-status-row>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div *ngIf=\\\"currentData|async as crData\\\" class=\\\"container rounded border bg-light m-1\\\">\\r\\n                    <!--\\\"load\\\": sd[1], \\\"frictionforce\\\":sd[2], \\\"rotationrate\\\": sd[3], \\\"temperature\\\": sd[4]-->\\r\\n                    <div class=\\\"row h5\\\">\\r\\n                        <div class=\\\"col\\\">Value</div>\\r\\n                        <div class=\\\"col\\\">Time, min</div>\\r\\n                        <div class=\\\"col\\\">RPM</div>\\r\\n                        <div class=\\\"col\\\">Load, N</div>\\r\\n                        <div class=\\\"col\\\">Friction, N</div>\\r\\n                        <div class=\\\"col\\\">T, °C</div>\\r\\n                        <!--<div class=\\\"col\\\">μ,-</div>-->\\r\\n                    </div>\\r\\n                    <div class=\\\"row border-top\\\">\\r\\n                        <div class=\\\"col\\\">average</div>\\r\\n                        <div class=\\\"col\\\">{{crData.db[0]/60.0| number:'1.2-2'}}</div>\\r\\n                        <div class=\\\"col\\\">{{crData.adb[3]| number:'1.1-1'}}</div>\\r\\n                        <div class=\\\"col\\\">{{crData.adb[1]| number}}</div>\\r\\n                        <div class=\\\"col\\\">{{crData.adb[2]| number}}</div>\\r\\n                        <div class=\\\"col\\\">{{crData.adb[4]| number:'1.1-1'}}</div>\\r\\n                        <!--<div class=\\\"col\\\">{{crData.adb[2]/crData.adb[1]| number}}</div>-->\\r\\n                    </div>\\r\\n                    <div class=\\\"row border-top font-weight-light\\\">\\r\\n                        <div class=\\\"col\\\">actual</div>\\r\\n                        <div class=\\\"col\\\">{{crData.db[0]/60.0| number:'1.2-2'}}</div>\\r\\n                        <div class=\\\"col\\\">{{crData.db[3]| number:'1.1-1'}}</div>\\r\\n                        <div class=\\\"col\\\">{{crData.db[1]| number}}</div>\\r\\n                        <div class=\\\"col\\\">{{crData.db[2]| number}}</div>\\r\\n                        <div class=\\\"col\\\">{{crData.db[4]| number:'1.1-1'}}</div>\\r\\n                        <!--<div class=\\\"col\\\">{{crData.db[2]/crData.db[1]| number}}</div>-->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!--status =  init = 0, started = 2, completed = 3 -->\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"container rounded border bg-light m-1\\\">\\r\\n                    <!-- && totSTATE.state.VFD_on && totSTATE.state.load_on -->\\r\\n                    <div *ngIf=\\\"totSTATE.state.status==1\\\" class=\\\"row\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger m-1\\\" (click)=\\\"startExperiment()\\\">Start experiment</button>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"totSTATE.state.status==2\\\" class=\\\"row\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger m-1\\\" (click)=\\\"stopExperiment()\\\">Stop experiment</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"totSTATE.state.status==2 || totSTATE.state.status==3\\\" class=\\\"row\\\">\\r\\n                <div class=\\\"col-3\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"resfreshChart()\\\">Refresh chart</button>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"totSTATE.state.status==2\\\" class=\\\"col-9\\\">\\r\\n                    <h6>Chart refresh period</h6>\\r\\n                    <select id=\\\"refreshPeriodSelect\\\" (change)=\\\"onChangerefreshPeriod($event.target.value)\\\" [value]='1'>\\r\\n                        <option value=\\\"0\\\">off</option>\\r\\n                        <option value=\\\"1\\\">1 minute</option>\\r\\n                        <option value=\\\"2\\\">2 minutes</option>\\r\\n                        <option value=\\\"5\\\">5 minutes</option>\\r\\n                        <option value=\\\"10\\\">10 minutes</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"container rounded border bg-light\\\">\\r\\n            <canvas baseChart #writing height=\\\"400\\\"\\r\\n                    [datasets]=\\\"ChartFile.lineChartData\\\"\\r\\n                    [labels]=\\\"ChartFile.lineChartLabels\\\"\\r\\n                    [options]=\\\"ChartFile.lineChartOptions\\\"\\r\\n                    [colors]=\\\"ChartFile.lineChartColors\\\"\\r\\n                    [legend]=\\\"ChartFile.lineChartLegend\\\"\\r\\n                    [chartType]=\\\"ChartFile.lineChartType\\\"></canvas>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"/\\\"><img [src]=\\\"appLogo\\\" alt=\\\"logo\\\"></a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <!-- invalid = 0, valid=1, started = 2, completed = 3 -->\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\r\\n        <ul *ngIf=\\\"{settings:signalsService.settings$|async,state:signalsService.lastState$|async} as tstate\\\" class=\\\"navbar-nav\\\">\\r\\n            <li *ngIf=\\\"tstate.state && (tstate.state.status!==2)\\\" class=\\\"nav-item dropdown\\\">\\r\\n                <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarSettings\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                    Options\\r\\n                </a>\\r\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarSettings\\\">\\r\\n                    <a class=\\\"dropdown-item\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/settings']\\\">Settings</a>\\r\\n                    <a class=\\\"dropdown-item\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/calibr']\\\">Calibration</a>\\r\\n                </div>\\r\\n            </li>\\r\\n            <li *ngIf=\\\"tstate.state && tstate.settings && (!((tstate.state.status==2)&& (!tstate.settings.manual_mode)))\\\" class=\\\"nav-item active\\\">\\r\\n                <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/controls']\\\">Manual controls<span class=\\\"sr-only\\\">(current)</span></a>\\r\\n            </li>\\r\\n            <li *ngIf=\\\"tstate.state && tstate.settings && (tstate.state.status!==0)\\\" class=\\\"nav-item active\\\">\\r\\n                <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/experiment']\\\">\\r\\n                    Experiment: {{tstate.settings.output_file}}\\r\\n                    <span class=\\\"sr-only\\\">(current)</span>\\r\\n                </a>\\r\\n            </li>\\r\\n\\r\\n            <!--<li *ngIf=\\\"tstate.state && tstate.settings\\\" class=\\\"nav-item active\\\">\\r\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['']\\\">\\r\\n                    STSUS:{{tstate.state.toStateString()}}\\r\\n                    <span class=\\\"sr-only\\\">(current)</span>\\r\\n                </a>\\r\\n            </li>-->\\r\\n        </ul>\\r\\n    </div>\\r\\n</nav>\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <header class=\\\"pageHeader\\\">\\r\\n        <h3><i class=\\\"fa fa-exclamation-circle fa-lg page-caption\\\" aria-hidden=\\\"true\\\"></i> {{'pageHeader.NotFound'}}</h3>\\r\\n    </header>\\r\\n\\r\\n    <div class=\\\"vertical-center-flex\\\">\\r\\n        <div class=\\\"center-block\\\">\\r\\n            <div class=\\\"icon-container\\\"><i class='fa fa-exclamation-circle'></i> {{'notFound.404'}}</div>\\r\\n            <div class=\\\"text-muted error-description\\\">{{'notFound.pageNotFound'}}</div>\\r\\n            <div><a class=\\\"btn btn-primary\\\" routerLink=\\\"/\\\"><i class='fa fa-home'></i> {{'notFound.backToHome'}}</a></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div *ngIf=\\\"lSettings\\\">\\r\\n        <h1>Settings</h1>\\r\\n\\r\\n        <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"settingsForm\\\">\\r\\n            <mat-form-field class=\\\"control-full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Name Surname</mat-label>\\r\\n                <input type=\\\"text\\\" name=\\\"user\\\" matInput [formControl]=\\\"userControl\\\" [matAutocomplete]=\\\"auto\\\"\\r\\n                       [errorStateMatcher]=\\\"matcher\\\">\\r\\n                <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n                    <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">\\r\\n                        {{option}}\\r\\n                    </mat-option>\\r\\n                </mat-autocomplete>\\r\\n                <mat-error *ngIf=\\\"userControl.hasError('required')\\\">\\r\\n                    Bearing description is <strong>required</strong>\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- [value]=\\\"lSettings.bearing\\\"\\r\\n         [value]=\\\"lSettings.output_file\\\"\\r\\n        -->\\r\\n            <mat-form-field class=\\\"control-full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Bearing description</mat-label>\\r\\n                <textarea matInput\\r\\n                          name=\\\"bearing\\\"\\r\\n                          [formControl]=\\\"bearingDescrControl\\\"\\r\\n                          [errorStateMatcher]=\\\"matcher\\\"></textarea>\\r\\n                <!-- [errorStateMatcher]=\\\"matcher\\\" -->\\r\\n                <mat-error *ngIf=\\\"bearingDescrControl.hasError('required')\\\">\\r\\n                    Bearing description is <strong>required</strong>\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-8\\\">\\r\\n                    <mat-form-field class=\\\"control-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Output file name</mat-label>\\r\\n                        <input type=\\\"text\\\" matInput\\r\\n                               name=\\\"output_file\\\"\\r\\n                               [formControl]=\\\"outputFileNameControl\\\"\\r\\n                               [errorStateMatcher]=\\\"matcher\\\">\\r\\n                        <mat-error *ngIf=\\\"outputFileNameControl.hasError('required')\\\">\\r\\n                            Output file name is <strong>required</strong>\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"outputFileNameControl.hasError('outputFileExists')\\\">\\r\\n                            Output file <strong>already exists</strong>\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <mat-form-field class=\\\"control-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Recording interval, s</mat-label>\\r\\n                        <input type=\\\"text\\\" matInput\\r\\n                               name=\\\"recording_cycle\\\"\\r\\n                               [formControl]=\\\"recIntervalControl\\\"\\r\\n                               [errorStateMatcher]=\\\"matcher\\\">\\r\\n                        <mat-error *ngIf=\\\"recIntervalControl.hasError('required')\\\">\\r\\n                            Recording interval is <strong>required</strong>\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n                <!--<div *ngIf=\\\"!lSettings.manual_mode\\\" class=\\\"form-group\\\">\\r\\n        <label for=\\\"total_duration\\\">Maximum experiment duration, minutes</label>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"total_duration\\\" placeholder=\\\"Example: 24\\\"\\r\\n               required min=\\\"1\\\" max=\\\"10000\\\"\\r\\n               [(ngModel)]=\\\"lSettings.total_duration\\\" name=\\\"total_duration\\\" #total_duration=\\\"ngModel\\\" />\\r\\n        <div [hidden]=\\\"total_duration.valid\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n            Maximum experiment duration is required\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!lSettings.manual_mode\\\" class=\\\"form-group\\\">\\r\\n        <label for=\\\"load\\\">Applied load, N</label>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"load\\\" placeholder=\\\"1<load<1000\\\"\\r\\n               required min=\\\"1\\\" max=\\\"1000\\\"\\r\\n               [(ngModel)]=\\\"lSettings.load\\\" name=\\\"load\\\" #load=\\\"ngModel\\\" />\\r\\n        <div [hidden]=\\\"load.valid\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n            Applied load is required\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!lSettings.manual_mode\\\" class=\\\"form-group\\\">\\r\\n        <label for=\\\"rpm\\\">Revolutions per minute(RPM)</label>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"rpm\\\" placeholder=\\\"300<load<3000\\\"\\r\\n               required min=\\\"300\\\" max=\\\"3000\\\"\\r\\n               [(ngModel)]=\\\"lSettings.rpm\\\" name=\\\"rpm\\\" #rpm=\\\"ngModel\\\" />\\r\\n        <div [hidden]=\\\"rpm.valid\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n            Applied load is required\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!lSettings.manual_mode\\\" class=\\\"form-group\\\">\\r\\n        <label for=\\\"friction_force_threshold\\\">Friction force threshold, N</label>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"friction_force_threshold\\\" placeholder=\\\"Example: 2\\\"\\r\\n               required min=\\\"10\\\" max=\\\"1000\\\"\\r\\n               [(ngModel)]=\\\"lSettings.friction_force_threshold\\\" name=\\\"friction_force_threshold\\\" #friction_force_threshold=\\\"ngModel\\\" />\\r\\n        <div [hidden]=\\\"friction_force_threshold.valid\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n            Friction force threshold is required\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!lSettings.manual_mode\\\" class=\\\"form-group\\\">\\r\\n        <label for=\\\"temperature_threshold\\\">Temperature threshold, °C</label>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"temperature_threshold\\\" placeholder=\\\"Example: 2\\\"\\r\\n               required min=\\\"25\\\" max=\\\"120\\\"\\r\\n               [(ngModel)]=\\\"lSettings.temperature_threshold\\\" name=\\\"temperature_threshold\\\" #temperature_threshold=\\\"ngModel\\\" />\\r\\n        <div [hidden]=\\\"temperature_threshold.valid\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n            Temperature threshold is required\\r\\n        </div>\\r\\n    </div>-->\\r\\n\\r\\n                <mat-checkbox formControlName=\\\"manualModeControle\\\" name=\\\"manual_mode\\\">Programmed experiment</mat-checkbox>\\r\\n\\r\\n                <!--<div class=\\\"form-group\\\">\\r\\n        <label for=\\\"manual_mode\\\">Programmed experiment</label>\\r\\n        <input type=\\\"checkbox\\\" class=\\\"form-control\\\" id=\\\"manual_mode\\\"\\r\\n               [(ngModel)]=\\\"lSettings.manual_mode\\\" name=\\\"manual_mode\\\" #manual_mode=\\\"ngModel\\\" />\\r\\n    </div>-->\\r\\n\\r\\n                <div>\\r\\n                    <div class=\\\"card-body bg-light border-top\\\">\\r\\n                        <div *ngIf=\\\"lSettings.manual_mode\\\" class=\\\"row\\\">\\r\\n                            <div class=\\\"col-12 col-sm-6 pr-sm-0 col-md-12 pr-md-3 col-xl-6 pr-xl-0\\\">\\r\\n                                <div class=\\\"btn-group btn-block\\\">\\r\\n                                    <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\"\\r\\n                                            (click)=\\\"InserRowBefore()\\\" title=\\\"Insert row above\\\">\\r\\n                                        <i class=\\\"fa fa-plus-circle\\\"></i><i class=\\\"fa fa-arrow-up\\\"></i>\\r\\n                                    </button>\\r\\n                                    <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\"\\r\\n                                            (click)=\\\"InserRowAfter()\\\" title=\\\"Insert row below\\\">\\r\\n                                        <i class=\\\"fa fa-plus-circle\\\"></i><i class=\\\"fa fa-arrow-down\\\"></i>\\r\\n                                    </button>\\r\\n                                    <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" [disabled]=\\\"selectedRow==null\\\"\\r\\n                                            (click)=\\\"MoveUp()\\\" title=\\\"Move selected row up\\\">\\r\\n                                        <i class=\\\"fa fa-long-arrow-up\\\"></i>\\r\\n                                    </button>\\r\\n                                    <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" [disabled]=\\\"selectedRow==null\\\"\\r\\n                                            (click)=\\\"MoveDown()\\\" title=\\\"Move selected row down\\\">\\r\\n                                        <i class=\\\"fa fa-long-arrow-down\\\"></i>\\r\\n                                    </button>\\r\\n                                    <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" [disabled]=\\\"selectedRow==null\\\"\\r\\n                                            (click)=\\\"DeleteRow()\\\" title=\\\"Dete row\\\">\\r\\n                                        Delete\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <!-- \\\"duration\\\":0.25, \\\"load\\\":0.0,\\\"RPM\\\":1000,\\\"Tmax\\\":100,\\\"Fmax\\\":10 -->\\r\\n                            <div class=\\\"col-3\\\">Duration, minutes</div>\\r\\n                            <div class=\\\"col-2\\\">Load, N</div>\\r\\n                            <div class=\\\"col-3\\\">Revolutions per minute</div>\\r\\n                            <div class=\\\"col-2\\\">Friction force threshold</div>\\r\\n                            <div class=\\\"col-2\\\">Temperature threshold, °C</div>\\r\\n                        </div>\\r\\n                        <div *ngFor=\\\"let r of programmList\\\" class=\\\"row\\\" (click)=\\\"onSelectRow(r)\\\">\\r\\n                            <!-- \\\"duration\\\":0.25, \\\"load\\\":0.0,\\\"RPM\\\":1000,\\\"Tmax\\\":100,\\\"Fmax\\\":10 -->\\r\\n                            <div *ngIf=\\\"r!=selectedRow\\\" class=\\\"card-body bg-light border-top\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-3\\\">{{r.duration}}</div>\\r\\n                                    <div class=\\\"col-2\\\">{{r.load}}</div>\\r\\n                                    <div class=\\\"col-3\\\">{{r.RPM}}</div>\\r\\n                                    <div class=\\\"col-2\\\">{{r.Fmax}}</div>\\r\\n                                    <div class=\\\"col-2\\\">{{r.Tmax}}</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"r==selectedRow\\\" class=\\\"card-body bg-light border-top\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-3\\\">\\r\\n                                        <mat-form-field class=\\\"control-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                            <input type=\\\"number\\\" matInput\\r\\n                                                   name=\\\"pr_du\\\" [formControl]=\\\"durationControl\\\"\\r\\n                                                   [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                        </mat-form-field>\\r\\n                                        <!--<input type=\\\"number\\\" matInput\\r\\n                                                   name=\\\"pr_du\\\" [formControl]=\\\"durationControl\\\"\\r\\n                                                   [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                        <input type=\\\"number\\\" required min=\\\"1\\\" max=\\\"10000\\\"\\r\\n                                               [(ngModel)]=\\\"selectedRow.duration\\\" class=\\\"form-control\\\" name=\\\"pr_du\\\" />-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-2\\\">\\r\\n                                        <mat-form-field class=\\\"control-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                            <input type=\\\"number\\\" matInput\\r\\n                                                   name=\\\"pr_load\\\" [formControl]=\\\"loadControl\\\"\\r\\n                                                   [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                        </mat-form-field>\\r\\n                                        <!--<input type=\\\"number\\\" matInput\\r\\n                                                   name=\\\"pr_load\\\" [formControl]=\\\"loadControl\\\"\\r\\n                                                   [errorStateMatcher]=\\\"matcher\\\">-->\\r\\n                                            <!--<input type=\\\"number\\\" required min=\\\"1\\\" max=\\\"1000\\\"\\r\\n                                                   [(ngModel)]=\\\"selectedRow.load\\\" class=\\\"form-control\\\" name=\\\"pr_load\\\" />-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-3\\\">\\r\\n                                        <mat-form-field class=\\\"control-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                            <input type=\\\"number\\\" matInput\\r\\n                                                   name=\\\"pr_rpm\\\" [formControl]=\\\"RPMControl\\\"\\r\\n                                                   [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                        </mat-form-field>\\r\\n                                        <!--<input type=\\\"number\\\" matInput\\r\\n                                                   name=\\\"pr_rpm\\\" [formControl]=\\\"RPMControl\\\"\\r\\n                                                   [errorStateMatcher]=\\\"matcher\\\">-->\\r\\n                                        <!--<input type=\\\"number\\\" required min=\\\"300\\\" max=\\\"3000\\\"\\r\\n                                               [(ngModel)]=\\\"selectedRow.RPM\\\" class=\\\"form-control\\\" name=\\\"pr_rpm\\\" />-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-2\\\">\\r\\n                                        <mat-form-field class=\\\"control-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                            <input type=\\\"number\\\" matInput\\r\\n                                                   name=\\\"pr_Fm\\\" [formControl]=\\\"frictThreshControl\\\"\\r\\n                                                   [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                        </mat-form-field>\\r\\n                                        <!--<input type=\\\"number\\\" matInput\\r\\n                                                   name=\\\"pr_Fm\\\" [formControl]=\\\"frictThreshControl\\\"\\r\\n                                                   [errorStateMatcher]=\\\"matcher\\\">-->\\r\\n                                        <!--<input type=\\\"number\\\" required min=\\\"10\\\" max=\\\"1000\\\"\\r\\n                                               [(ngModel)]=\\\"selectedRow.Fmax\\\" class=\\\"form-control\\\" name=\\\"pr_Fm\\\" />-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-2\\\">\\r\\n                                        <mat-form-field class=\\\"control-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                            <input type=\\\"number\\\" matInput\\r\\n                                                   name=\\\"pr_Tm\\\" [formControl]=\\\"tempThreshControl\\\"\\r\\n                                                   [errorStateMatcher]=\\\"matcher\\\">\\r\\n                                        </mat-form-field>\\r\\n                                        <!--<input type=\\\"number\\\" matInput\\r\\n                                                   name=\\\"pr_Tm\\\" [formControl]=\\\"tempThreshControl\\\"\\r\\n                                                   [errorStateMatcher]=\\\"matcher\\\">-->\\r\\n                                        <!--<input type=\\\"number\\\" required min=\\\"25\\\" max=\\\"120\\\"\\r\\n                                               [(ngModel)]=\\\"selectedRow.Tmax\\\" class=\\\"form-control\\\" name=\\\"pr_Tm\\\" />-->\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!settingsForm.valid\\\">Apply</button>\\r\\n</form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <app-status-row></app-status-row>\\r\\n    <div *ngIf=\\\"signalsService.settings$|async as sett\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"container rounded border bg-light m-1\\\">\\r\\n            <div class=\\\"row h5\\\">\\r\\n                <div class=\\\"col-3\\\">RPM control</div>\\r\\n                <div class=\\\"col-4\\\">Target</div>\\r\\n                <div class=\\\"col-5\\\">Manual(VFD)</div>\\r\\n            </div>\\r\\n            <div class=\\\"row border-top\\\">\\r\\n                <div class=\\\"col-3\\\"></div>\\r\\n                <div class=\\\"col-4\\\">\\r\\n                    <input type=\\\"number\\\" min=\\\"5\\\" max=\\\"125\\\" name=\\\"rpm_auto\\\" [value]=\\\"sett.rpm\\\" #rpm_auto>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-info m-1\\\" (click)=\\\"setRPMAuto(rpm_auto.value)\\\">Apply</button>\\r\\n                </div>\\r\\n                <div class=\\\"col-5\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-info m-1\\\" (click)=\\\"decreaseRPM(rpm_manual.value)\\\">Decrease</button>\\r\\n                    <input type=\\\"number\\\" min=\\\"1\\\" max=\\\"100\\\" [value]=\\\"10\\\" name=\\\"rpm_manual\\\" #rpm_manual>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-info m-1\\\" (click)=\\\"increaseRPM(rpm_manual.value)\\\">Increase</button>\\r\\n                    <!--<button type=\\\"button\\\" class=\\\"btn btn-info m-1\\\" (click)=\\\"rotation()\\\">Apply {{rpmVal| number:'1.1-1'}}[RPM]/{{rpmVal/60.0| number:'1.1-1'}}[Hz]</button>-->\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-info m-1\\\" (click)=\\\"StopRotation()\\\">Stop</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"signalsService.settings$|async as sett\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"container rounded border bg-light m-1\\\">\\r\\n            <div class=\\\"row h5\\\">\\r\\n                <div class=\\\"col-3\\\">Load control</div>\\r\\n                <div class=\\\"col-4\\\">Target</div>\\r\\n                <div class=\\\"col-5\\\">Manual</div>\\r\\n            </div>\\r\\n            <div class=\\\"row border-top\\\">\\r\\n                <div class=\\\"col-3\\\"></div>\\r\\n                <div class=\\\"col-4\\\">\\r\\n                    <input type=\\\"number\\\" class=\\\"m-1\\\" min=\\\"1\\\" max=\\\"1020\\\" name=\\\"load_auto\\\" [value]=\\\"sett.load\\\" #load_auto>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-info m-1\\\" (click)=\\\"setLoadAuto(load_auto.value)\\\">Apply</button>\\r\\n                </div>\\r\\n                <div class=\\\"col-5\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-info m-1\\\" (click)=\\\"loadMinus(load_manual.value)\\\">Decrease</button>\\r\\n                    <input type=\\\"number\\\" [value]=\\\"10\\\" min=\\\"1\\\" max=\\\"100\\\" name=\\\"load_manual\\\" #load_manual>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-info m-1\\\" (click)=\\\"loadPlus(load_manual.value)\\\">Increase</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"signalsService.settings$|async as sett\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"container rounded border bg-light m-1\\\">\\r\\n            <div class=\\\"row h5\\\">\\r\\n                <div class=\\\"col-3\\\">\\r\\n                    Thresholds\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-info m-1\\\" (click)=\\\"setThresholds(fr_threshold.value,t_threshold.value)\\\">Apply</button>\\r\\n                </div>\\r\\n                <div class=\\\"col-4\\\">\\r\\n                    <input type=\\\"number\\\" [value]=\\\"sett.friction_force_threshold\\\" class=\\\"m-1\\\" min=\\\"5\\\" max=\\\"125\\\" name=\\\"fr_threshold\\\" #fr_threshold>\\r\\n                    Friction, N\\r\\n                </div>\\r\\n                <div class=\\\"col-5\\\">\\r\\n                    <input type=\\\"number\\\" [value]=\\\"sett.temperature_threshold\\\" class=\\\"m-1\\\" min=\\\"15\\\" max=\\\"100\\\" name=\\\"t_threshold\\\" #t_threshold>\\r\\n                    T, °C\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--<div class=\\\"row border-top\\\">\\r\\n                <div class=\\\"col text-center mx-auto\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info m-1\\\" (click)=\\\"setThresholds(fr_threshold.value,t_threshold.value)\\\">Apply</button>\\r\\n                </div>\\r\\n                <div class=\\\"col text-center mx-auto\\\">\\r\\n                    <input type=\\\"number\\\" [value]=\\\"sett.friction_force_threshold\\\" class=\\\"m-1\\\" min=\\\"5\\\" max=\\\"125\\\" name=\\\"fr_threshold\\\" #fr_threshold>\\r\\n                </div>\\r\\n                <div class=\\\"col text-center mx-auto\\\">\\r\\n                    <input type=\\\"number\\\" [value]=\\\"sett.temperature_threshold\\\" class=\\\"m-1\\\" min=\\\"15\\\" max=\\\"100\\\" name=\\\"t_threshold\\\" #t_threshold>\\r\\n                </div>\\r\\n            </div>-->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div *ngIf=\\\"currentData\\\" class=\\\"container rounded border bg-light m-1\\\">\\r\\n            <!--\\\"load\\\": sd[1], \\\"frictionforce\\\":sd[2], \\\"rotationrate\\\": sd[3], \\\"temperature\\\": sd[4]-->\\r\\n            <div class=\\\"row h5\\\">\\r\\n                <div class=\\\"col\\\">Value</div>\\r\\n                <div class=\\\"col\\\">RPM</div>\\r\\n                <div class=\\\"col\\\">Load, N</div>\\r\\n                <div class=\\\"col\\\">Friction, N</div>\\r\\n                <div class=\\\"col\\\">T, °C</div>\\r\\n                <!--<div class=\\\"col\\\">μ,-</div>-->\\r\\n            </div>\\r\\n            <div class=\\\"row border-top\\\">\\r\\n                <div class=\\\"col\\\">average</div>\\r\\n                <div class=\\\"col\\\">{{currentData.adb[3]| number:'1.1-1'}}</div>\\r\\n                <div class=\\\"col\\\">{{currentData.adb[1]| number}}</div>\\r\\n                <div class=\\\"col\\\">{{currentData.adb[2]| number}}</div>\\r\\n                <div class=\\\"col\\\">{{currentData.adb[4]| number:'1.1-1'}}</div>\\r\\n                <!--<div class=\\\"col\\\">{{currentData.adb[2]/currentData.adb[1]| number}}</div>-->\\r\\n            </div>\\r\\n            <div class=\\\"row border-top font-weight-light\\\">\\r\\n                <div class=\\\"col\\\">actual</div>\\r\\n                <div class=\\\"col\\\">{{currentData.db[3]| number:'1.1-1'}}</div>\\r\\n                <div class=\\\"col\\\">{{currentData.db[1]| number}}</div>\\r\\n                <div class=\\\"col\\\">{{currentData.db[2]| number}}</div>\\r\\n                <div class=\\\"col\\\">{{currentData.db[4]| number:'1.1-1'}}</div>\\r\\n                <!--<div class=\\\"col\\\">{{currentData.db[2]/currentData.db[1]| number}}</div>-->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <div class=\\\"container rounded border bg-light m-1\\\">\\r\\n                <canvas baseChart #listen height=\\\"400\\\"\\r\\n                        [datasets]=\\\"ChartListen.lineChartData\\\"\\r\\n                        [labels]=\\\"ChartListen.lineChartLabels\\\"\\r\\n                        [options]=\\\"ChartListen.lineChartOptions\\\"\\r\\n                        [colors]=\\\"ChartListen.lineChartColors\\\"\\r\\n                        [legend]=\\\"ChartListen.lineChartLegend\\\"\\r\\n                        [chartType]=\\\"ChartListen.lineChartType\\\"></canvas>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\nimport { ExperimentComponent } from './components/experiment/experiment.component'; \r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\nimport { CalibrCurveComponent } from './components/calibr-curve/calibr-curve.component';\r\nimport { TribControlsComponent } from './components/trib-controls/trib-controls.component';\r\nconst routes: Routes = [\r\n    { path: \"calibr\", component: CalibrCurveComponent, data: { title: \"Calibration curves\" } },\r\n    { path: \"controls\", component: TribControlsComponent, data: { title: \"Controls\" } },\r\n    { path: \"settings\", component: SettingsComponent, data: { title: \"Settings\" } },\r\n    { path: \"experiment\", component: ExperimentComponent, data: { title: \"Workshop\" } },\r\n    { path: \"\", redirectTo: \"settings\", pathMatch: \"full\" },\r\n    { path: \"**\", component: NotFoundComponent, data: { title: \"Page not found\" } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit,OnDestroy } from '@angular/core';\r\n\r\nimport { SensorsData, trSettings, trState, trTotalState } from './models/message.model';\r\nimport { ChartService } from './services/chart.service';\r\nimport { SignalsService } from './services/signals.service'\r\nimport { Subscription, forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    appLogo = require(\"./../assets/bearing.png\");\r\n    title = 'Tribometer';\r\n    constructor(\r\n        private signalsService: SignalsService,\r\n        private chartService: ChartService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.signalsService.GetSettings().subscribe();\r\n        forkJoin(this.signalsService.GetState(), this.signalsService.GetSettings()).subscribe(\r\n            ([st, stt]) => {\r\n                this.signalsService.settings$.next(stt);\r\n                this.signalsService.lastState$.next(new trState(st));\r\n                console.log(\"Get Settings: Ok\");\r\n                this.SocketServiceStart();\r\n            },\r\n            resErr => { console.log(\"Get Settings: Error\"); },\r\n            () => { }\r\n        );\r\n    }\r\n\r\n    SocketServiceStart() {\r\n        this.signalsService.startListen().subscribe(\r\n            x => {\r\n                console.log(\"socketService.startListen: Ok\");\r\n                this.chartService.initChartData();\r\n                //this.socketService.initSocket();\r\n                this.signalsService.socket.subscribe(\r\n                    msg => {\r\n                        //console.log(\"updateChartData\");\r\n                        if (msg.sensorData) {\r\n                            this.signalsService.lastData$.next(msg.sensorData);\r\n                            this.chartService.updateChartData(msg.sensorData);\r\n                        }\r\n                        if (msg.state) {\r\n                            this.signalsService.lastState$.next(msg.state);\r\n                        }\r\n                        \r\n                });\r\n            },\r\n            resErr => { console.log(\"socketService.startListen: Error\"); },\r\n            () => { }\r\n        );\r\n    }\r\n    ngOnDestroy() {\r\n        //if (this.SockServLastDataSubsc) { this.SockServLastDataSubsc.unsubscribe();}\r\n        this.signalsService.stopListen().subscribe();\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule, MatCheckboxModule } from '@angular/material';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\nimport { ExperimentComponent } from './components/experiment/experiment.component';\r\nimport { CalibrCurveComponent } from './components/calibr-curve/calibr-curve.component';\r\nimport { TribControlsComponent } from './components/trib-controls/trib-controls.component';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\nimport { ShowErrorsComponent } from './components/show-errors.component';\r\n\r\n//import { SocketService } from './services/socket.service';\r\nimport { SignalsService } from './services/signals.service';\r\nimport { ChartService } from './services/chart.service';\r\nimport { TabulatorTableComponent } from './components/controls/tabulator-table/tabulator-table.component';\r\nimport { StatusRowComponent } from './components/controls/status-row/status-row.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    SettingsComponent,\r\n    ExperimentComponent,\r\n    CalibrCurveComponent,\r\n    NotFoundComponent,\r\n    ShowErrorsComponent,\r\n    //SettingsFormComponent,\r\n    TabulatorTableComponent,\r\n    StatusRowComponent,\r\n    TribControlsComponent\r\n  ],\r\n    imports: [\r\n        BrowserAnimationsModule, MatInputModule, MatButtonModule, MatCheckboxModule, MatAutocompleteModule,\r\n        MatFormFieldModule,\r\n        HttpClientModule, BrowserModule, ReactiveFormsModule, FormsModule, ChartsModule,\r\n        AppRoutingModule\r\n  ],\r\n    providers: [SignalsService, ChartService],//SocketService,\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"li.selected {\\r\\n  /*background-color: #CFD8DC !important;*/\\r\\n  color: black;\\r\\n  font-weight: bold;\\r\\n  font-size: large;\\r\\n}\\r\\n\\r\\n.ccurves li:hover {\\r\\n  color: #607D8B;\\r\\n  cursor: pointer;\\r\\n  /*background-color: #DDD;*/\\r\\n  left: .1em;\\r\\n}\\r\\n\\r\\n/*.card-header {\\r\\n  background-color: transparent;\\r\\n}*/\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jYWxpYnItY3VydmUvY2FsaWJyLWN1cnZlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx3Q0FBd0M7RUFDeEMsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLDBCQUEwQjtFQUMxQixVQUFVO0FBQ1o7O0FBRUE7O0VBRUUiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NhbGlici1jdXJ2ZS9jYWxpYnItY3VydmUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImxpLnNlbGVjdGVkIHtcclxuICAvKmJhY2tncm91bmQtY29sb3I6ICNDRkQ4REMgIWltcG9ydGFudDsqL1xyXG4gIGNvbG9yOiBibGFjaztcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IGxhcmdlO1xyXG59XHJcblxyXG4uY2N1cnZlcyBsaTpob3ZlciB7XHJcbiAgY29sb3I6ICM2MDdEOEI7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIC8qYmFja2dyb3VuZC1jb2xvcjogI0RERDsqL1xyXG4gIGxlZnQ6IC4xZW07XHJcbn1cclxuXHJcbi8qLmNhcmQtaGVhZGVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufSovXHJcblxyXG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { CalibrationCurve, trTotalState, ObjHelper } from './../../models/message.model';\r\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\r\nimport { SignalsService } from './../../services/signals.service';\r\nimport { ChartService } from './../../services/chart.service';\r\n\r\nclass CurveRow {\r\n    constructor(public x: number = 0, public y: number = 0, public Nr: number = null) { }\r\n}\r\n\r\nclass CurveInfo {\r\n    constructor(public name?: string, public path?: string, public title?: string[]) { }\r\n}\r\n\r\nclass CurrentData {\r\n    constructor(public avgVoltage?: number, public avgForce?: number,\r\n        public currVoltage?: number, public currForce?: number) { }\r\n    \r\n}\r\n\r\n@Component({\r\n    selector: 'app-calibr-curve',\r\n    templateUrl: './calibr-curve.component.html',\r\n    styleUrls: ['./calibr-curve.component.css']\r\n})\r\nexport class CalibrCurveComponent implements OnInit, OnDestroy {\r\n    selectedCurve: CurveInfo = null;\r\n    CCurves = [\r\n        new CurveInfo(\"Friction force calibration curve\", \"clbr_fr\", [\"Voltage, V\", \"Force, N\"]),\r\n        new CurveInfo(\"Load calibration curve\", \"clbr_load\", [\"Voltage, V\", \"Force, N\"])\r\n    ]\r\n    currentData: CurrentData = new CurrentData(NaN, NaN, NaN, NaN);\r\n    data$: BehaviorSubject<CurveRow[]> = new BehaviorSubject<CurveRow[]>([]);\r\n    editCurve: boolean = false;\r\n    selectedRow: CurveRow = new CurveRow();\r\n    prevData: CurveRow[] = [];\r\n    OnChDCh: Subscription = null;\r\n    CcurvData: CalibrationCurve = null;\r\n\r\n    constructor(\r\n        private sygnalServ: SignalsService,\r\n        private chartService: ChartService\r\n    ) {\r\n        this.selectedCurve = this.CCurves[0];\r\n    }\r\n    \r\n    ngOnInit() {\r\n        this.onSelect(this.CCurves[0]);\r\n        this.OnChDCh = this.chartService.onChartDataChanged$.subscribe(\r\n            reOk => {\r\n                if (reOk) {\r\n                    //load, fr\r\n                    // time, load, fr\r\n                    if (this.selectedCurve == this.CCurves[0]) {\r\n                        // friction\r\n                        this.currentData = new CurrentData(reOk.avb[1], reOk.adb[2], reOk.vb[1], reOk.db[2]);\r\n                    } else {\r\n                        //load\r\n                        this.currentData = new CurrentData(reOk.avb[0], reOk.adb[1], reOk.vb[0], reOk.db[1]);\r\n                    }\r\n                    \r\n                    \r\n                }\r\n                //console.log(\"update trib-control\");\r\n            },\r\n            resErr => { },\r\n            () => { }\r\n        );\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.OnChDCh) { this.OnChDCh.unsubscribe(); } \r\n    }\r\n    printNumVal(v: any) {\r\n        return ObjHelper.printNumVal(v);\r\n    }\r\n    drawChart(cc: CalibrationCurve) {\r\n    }\r\n\r\n    onSelect(curve1) {\r\n        if (this.selectedCurve) {\r\n            let curve = this.selectedCurve;\r\n            console.log(\"onSelect\");\r\n            //this.selectedCurve = curve;\r\n            //this.CurveTable = null;\r\n            //this.CcurvData = null;\r\n            //this.tableSettings.columns[0].title = curve.title[0];\r\n            //this.tableSettings.columns[1].title = curve.title[1];\r\n            this.sygnalServ.GetCalibrationCurve(curve.path).subscribe(cc => {\r\n                console.log(\"GetCalibrationCurve\");\r\n                //this.CcurvData = cc;\r\n                //this.CurveTable = [];\r\n                let res: CurveRow[] = [];\r\n                for (var i = 0; i < cc.x.length; i++) {\r\n                    res.push(new CurveRow(cc.x[i], cc.y[i], i));\r\n                    //this.CurveTable.push({ x: cc.x[i], y: cc.y[i], select: true });\r\n                }\r\n                this.data$.next(res);\r\n                //this.drawChart(cc);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    CreateNewItem(Nr?: number) {\r\n        if (Nr === undefined) {\r\n            return new CurveRow(0, 0, null);\r\n        } else {\r\n            return new CurveRow(0, 0, Nr);\r\n        }\r\n    }\r\n\r\n    EditClic() {\r\n        this.editCurve = !this.editCurve;\r\n        if (this.editCurve) {\r\n            let res = this.data$.value;\r\n            res.forEach((r, i) => { r.Nr = i; });\r\n            this.prevData = []\r\n            res.forEach(r => { this.prevData.push(new CurveRow(r.x, r.y, r.Nr)); })\r\n            this.selectedRow = res[0];\r\n        } else {\r\n            this.CancelEdit();\r\n        }\r\n    }\r\n\r\n    onSelectRow(r: any) {\r\n        if (this.editCurve) {\r\n            this.selectedRow = r;\r\n        }\r\n    }\r\n\r\n    DeleteRow() {\r\n        if (this.selectedRow.Nr != null) {\r\n            let res = this.data$.value;\r\n            if (res.length > 1) {\r\n                //res.bazesCena.content = res.bazesCena.content.filter(it => it[\"Nr\"] !== this.selectedRow.Nr)\r\n                res.splice(this.selectedRow.Nr, 1);\r\n                res.forEach((r, i) => { r.Nr = i; });\r\n                this.selectedRow = this.CreateNewItem(null);//{ name: null, val: null, Nr: null };\r\n                this.data$.next(res);\r\n            }\r\n        }\r\n    }\r\n\r\n    InsertItem(before: boolean) {\r\n        let nr: number = this.selectedRow.Nr;\r\n        let res = this.data$.value;\r\n        let newItem = this.CreateNewItem();\r\n        if (nr != null) {\r\n            if (before) {\r\n                res.splice(nr, 0, newItem);\r\n            } else {\r\n                res.splice(nr + 1, 0, newItem);\r\n                nr = nr + 1;\r\n            }\r\n        } else {\r\n            if (before) {\r\n                res.unshift(newItem);\r\n                nr = 0;\r\n            } else {\r\n                res.push(newItem);\r\n                nr = res.length - 1;\r\n            }\r\n\r\n        }\r\n        res.forEach((r, i) => { r.Nr = i; });\r\n        this.selectedRow = res[nr];\r\n        this.data$.next(res);\r\n\r\n    }\r\n\r\n    InserRowBefore() {\r\n        this.InsertItem(true);\r\n    }\r\n\r\n    InserRowAfter() {\r\n        this.InsertItem(false);\r\n    }\r\n\r\n    MoveItem(up: boolean) {\r\n        let nr: number = this.selectedRow.Nr;\r\n        let res = this.data$.value;\r\n        let moved: boolean = false;\r\n        if (nr != null) {\r\n            if (up) {\r\n                if (nr > 0) {\r\n                    let it = res[nr];\r\n                    res[nr] = res[nr - 1];\r\n                    nr = nr - 1;\r\n                    res[nr] = it;\r\n                    moved = true;\r\n                }\r\n            } else {\r\n                if (nr < res.length - 1) {\r\n                    let it = res[nr];\r\n                    res[nr] = res[nr + 1];\r\n                    nr = nr + 1;\r\n                    res[nr] = it;\r\n                    moved = true;\r\n                }\r\n            }\r\n            if (moved) {\r\n                res.forEach((r, i) => { r.Nr = i; });\r\n                this.selectedRow = res[nr];\r\n                this.data$.next(res);\r\n            }\r\n        }\r\n    }\r\n\r\n    MoveUp() {\r\n        this.MoveItem(true);\r\n    }\r\n\r\n    MoveDown() {\r\n        this.MoveItem(false);\r\n    }\r\n\r\n    SaveData() {\r\n        let res = this.data$.value;\r\n        let cd = new CalibrationCurve();\r\n        res.forEach(it => { cd.x.push(it.x); cd.y.push(it.y); })\r\n        this.sygnalServ.EditCalibrationCurve(this.selectedCurve.path, cd).subscribe(\r\n            resOk => { this.prevData = res; this.CancelEdit(); },\r\n            resErr => { },\r\n            () => { }\r\n        );\r\n    }\r\n\r\n    CancelEdit() {\r\n        this.editCurve = false;\r\n        this.selectedRow = this.CreateNewItem(null);\r\n        let res: CurveRow[] = [];\r\n        this.prevData.forEach(r => { res.push(new CurveRow(r.x, r.y, r.Nr)); });\r\n        this.data$.next(res);\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29udHJvbHMvc3RhdHVzLXJvdy9zdGF0dXMtcm93LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, Input, OnInit, OnChanges, SimpleChanges, ElementRef, Renderer2 } from '@angular/core';\r\nimport { formatDate } from '@angular/common';\r\n\r\nimport { trTotalState, trState, trSettings, ObjHelper, trProgram } from './../../../models/message.model';\nimport { SignalsService } from './../../../services/signals.service';\r\nimport { ChartService } from './../../../services/chart.service';\r\n\r\n@Component({\r\n    selector: 'app-status-row',\r\n    templateUrl: './status-row.component.html',\r\n    styleUrls: ['./status-row.component.css']\r\n})\r\nexport class StatusRowComponent implements OnInit, OnChanges {\r\n    @Input() tableClass: string = \"\";\r\n    constructor(public signalsService: SignalsService,\r\n        private chartService: ChartService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        \r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29udHJvbHMvdGFidWxhdG9yLXRhYmxlL3RhYnVsYXRvci10YWJsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, Input, OnInit, OnChanges, SimpleChanges, ElementRef, Renderer2 } from '@angular/core';\r\nimport Tabulator from 'tabulator-tables';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-tabulator-table',\r\n    templateUrl: './tabulator-table.component.html',\r\n    styleUrls: ['./tabulator-table.component.css']\r\n})\r\nexport class TabulatorTableComponent implements OnInit, OnChanges {\r\n    @Input() tableClass: string = \"\";\r\n    @Input() tableSettings: any = {}\r\n    @Input() tableData: any[] = [];\r\n    @Input() tableColumns: any[] = null;\r\n    // @Input() height: string = '311px';\r\n    @Input() layout: any = null;\r\n    @Input() rowFormatter: any = null;\r\n    @Input() rowClick: any = null;\r\n    @Input() Theme: string = null;\r\n    //@Input() movableColumns: any = true;\r\n    @Input() responsiveLayout: any = null;\r\n    @Input() responsiveLayoutCollapseStartOpen: boolean = null;\r\n    @Input() rowSelectionChanged: any = null;\r\n    tab = document.createElement('div');\r\n    tabulator: Tabulator = null;\r\n    constructor(private compRootEl: ElementRef, private renderer: Renderer2) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.drawTable();\r\n    }\r\n\r\n    private drawTable(): void {\r\n        //this.tabulator = new Tabulator(this.compRootEl.nativeElement, {\r\n        if (this.tableClass) {\r\n            this.tab.setAttribute(\"class\", this.tableClass);\r\n        }\r\n        let settings = {};\r\n        if (this.tableSettings) {\r\n            settings = this.tableSettings;\r\n        }\r\n        if (this.tableData) {\r\n            settings[\"data\"] = this.tableData;\r\n        }\r\n        if (this.tableColumns) {\r\n            settings[\"columns\"] = this.tableColumns;\r\n        }\r\n\r\n        if (this.rowFormatter != null) {\r\n            settings[\"rowFormatter\"] = this.rowFormatter;\r\n        }\r\n        if (this.rowClick != null) {\r\n            settings[\"rowClick\"] = this.rowClick;\r\n        }\r\n\r\n        if (this.rowSelectionChanged != null) {\r\n            settings[\"rowSelectionChanged\"] = this.rowSelectionChanged;\r\n        }\r\n\r\n        if (this.layout != null) {\r\n            settings[\"layout\"] = this.layout;\r\n        }\r\n        //if (this.movableColumns) {\r\n        //  settings[\"movableColumns\"] = this.movableColumns;\r\n        //}\r\n        if (this.responsiveLayout != null) {\r\n            settings[\"responsiveLayout\"] = this.responsiveLayout;\r\n        }\r\n        if (this.responsiveLayoutCollapseStartOpen != null) {\r\n            settings[\"responsiveLayoutCollapseStartOpen\"] = this.responsiveLayoutCollapseStartOpen;\r\n        }\r\n        this.tabulator = new Tabulator(this.tab, settings);\r\n        //this.compRootEl.nativeElement\r\n        // this.compRootEl.nativeElement.appendChild(this.tab);\r\n        //this.renderer.removeChild(this.compRootEl.nativeElement,this.tab);\r\n        this.renderer.appendChild(this.compRootEl.nativeElement, this.tab);\r\n        //document.getElementById('app-tatulator-table').appendChild(this.tab);\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXhwZXJpbWVudC9leHBlcmltZW50LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Observable, Subscription, interval } from 'rxjs';\r\n\r\nimport { ChartDataSets, ChartOptions } from 'chart.js';\r\nimport { Color, BaseChartDirective, Label } from 'ng2-charts';\r\n\r\nimport { SensorsData, ExperimentStatus, ObjHelper, trState, trTotalState, trResultFileData } from './../../models/message.model';\r\nimport { SignalsService } from './../../services/signals.service';\r\nimport { ChartService, LineChartSettings } from './../../services/chart.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-experiment',\r\n    templateUrl: './experiment.component.html',\r\n    styleUrls: ['./experiment.component.css']\r\n})\r\nexport class ExperimentComponent implements OnInit, OnDestroy {\r\n    totState: Observable<trTotalState> = null;\r\n    currentData: Observable<SensorsData> = null;\r\n    subsArr: Subscription[] = [];\r\n    OnGetFileData_Timer = interval(60000);\r\n    OnFileData_TimerSubscription: Subscription = null;\r\n    public ChartFile: LineChartSettings = new LineChartSettings();\r\n    @ViewChild(\"writing\", { read: BaseChartDirective, static: true }) chartW: BaseChartDirective;\r\n\r\n    constructor(\r\n        public signalsService: SignalsService,\r\n        private chartService: ChartService\r\n    ) {  }\r\n    \r\n    ngOnInit() {\r\n        this.signalsService.GetTotalState();\r\n        this.currentData = this.chartService.onChartDataChanged$.asObservable()\r\n        //this.subsArr.push( this.chartService.onChartDataChanged$.subscribe(\r\n        //    reOk => {\r\n        //        this.currentData = reOk;\r\n        //    },\r\n        //    resErr => { },\r\n        //    () => { }\r\n        //));\r\n        this.subsArr.push(this.chartService.expFileData$.subscribe(\r\n            resOk => {\r\n                this.updateChartLines(resOk);\r\n            },\r\n            resErr => { },\r\n            () => { }\r\n        ));\r\n        if (this.signalsService.lastState$.value) {\r\n            if (this.signalsService.lastState$.value.status == 2) {\r\n                this.InitTimer(this.chartService.expFileDataRefreshPeriodMin);\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.subsArr.forEach(it => { if (it) { it.unsubscribe(); } });\r\n    }\r\n    printNumVal(v: any) {\r\n        return ObjHelper.printNumVal(v);\r\n    }\r\n\r\n    public secondsToSting(s: number) {\r\n        let t = Math.floor(s / 86400);\r\n        let ds = t > 0 ? (t < 10 ? \" \" + String(t) : String(t)) : \"  \";\r\n        let tt = s % 86400;\r\n        t = Math.floor(tt / 3600);\r\n        let hs = t > 0 ? (t < 10 ? \"0\" + String(t) : String(t)) : \"00\";\r\n        tt = tt % 3600;\r\n        t = Math.floor(tt / 60);\r\n        let ms = t > 0 ? (t < 10 ? \"0\" + String(t) : String(t)) : \"00\";\r\n        t = tt % 60;\r\n        let ss = t > 0 ? (t < 10 ? \"0\" + t.toFixed(1) : t.toFixed(1)) : \"00.0\";\r\n        return `${ds} ${hs}:${ms}:${ss}`;\r\n    }\r\n\r\n    updateChartLines(x: trResultFileData) {\r\n        if (x) {\r\n            //temperature, rotationrate, load, frictionforce\r\n            this.ChartFile.lineChartData[0].data = x.temperature;//this.removeNaN(x.temperature);\r\n            this.ChartFile.lineChartData[1].data = x.RPM;//this.removeNaN(x.RPM);\r\n            this.ChartFile.lineChartData[2].data = x.load;//this.removeNaN(x.load);\r\n            this.ChartFile.lineChartData[3].data = x.friction;//this.removeNaN(x.friction);\r\n            this.ChartFile.lineChartLabels = x.time.map(this.secondsToSting);\r\n            if (this.chartW) {\r\n                console.log(\"this.chartW.update()\");\r\n                this.chartW.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    startExperiment() {\r\n        this.beginWrite();\r\n    }\r\n\r\n    stopExperiment() {\r\n        this.endWrite();\r\n    }\r\n    \r\n    public removeNaN(data: number[]) {\r\n        data.forEach(function (item, i) { if (isNaN(item)) data[i] = -1; });\r\n        return data;\r\n    }\r\n    public updateWChartData() {\r\n        this.chartService.getDataFromFile();\r\n    }\r\n\r\n    beginWrite() {\r\n        console.log(\"Nachat zapis!\")\r\n        this.signalsService.beginWrite().subscribe(\r\n            resOk => {\r\n                this.InitTimer(this.chartService.expFileDataRefreshPeriodMin);\r\n                this.signalsService.GetTotalState();\r\n            },\r\n            resErr => { },\r\n            () => { }\r\n        );\r\n    }\r\n\r\n    endWrite() {\r\n        console.log(\"Zakoncit zapis!\")\r\n        this.UnsubscribeTimer();\r\n        this.signalsService.endWrite().subscribe(\r\n            resOk => {\r\n                this.updateWChartData();\r\n                this.signalsService.GetTotalState();\r\n            },\r\n            resErr => { },\r\n            () => { }\r\n        );\r\n    }\r\n    UnsubscribeTimer() {\r\n        if (this.OnFileData_TimerSubscription) {\r\n            this.OnFileData_TimerSubscription.unsubscribe();\r\n            this.OnFileData_TimerSubscription = null;\r\n        }\r\n    }\r\n    InitTimer(period: number) {\r\n        this.UnsubscribeTimer();\r\n        if (period > 0) {\r\n            this.OnGetFileData_Timer = interval(period * 60000);\r\n            this.OnFileData_TimerSubscription = this.OnGetFileData_Timer.subscribe(x => {\r\n                this.updateWChartData();\r\n            });\r\n        }\r\n\r\n    }\r\n    onChangerefreshPeriod(period_min: any) {\r\n        this.chartService.expFileDataRefreshPeriodMin = 0;\r\n        let p = +period_min;\r\n        if (p > 0) {\r\n            this.chartService.expFileDataRefreshPeriodMin = p;\r\n        }\r\n        this.InitTimer(this.chartService.expFileDataRefreshPeriodMin);\r\n    }\r\n    resfreshChart() {\r\n        this.updateWChartData();\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { SignalsService } from './../../services/signals.service';\r\nimport { trTotalState } from './../../models/message.model';\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  appLogo = require(\"../../../assets/bearing.png\");\r\n    constructor(public signalsService: SignalsService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".vertical-center-flex {\\r\\n    min-height: 60vh;\\r\\n}\\r\\n\\r\\n.icon-container {\\r\\n    font-size: 5em;\\r\\n}\\r\\n\\r\\n.error-description {\\r\\n    font-size: 1.5em;\\r\\n    padding-bottom: 10px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLG9CQUFvQjtBQUN4QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbm90LWZvdW5kL25vdC1mb3VuZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnZlcnRpY2FsLWNlbnRlci1mbGV4IHtcclxuICAgIG1pbi1oZWlnaHQ6IDYwdmg7XHJcbn1cclxuXHJcbi5pY29uLWNvbnRhaW5lciB7XHJcbiAgICBmb250LXNpemU6IDVlbTtcclxufVxyXG5cclxuLmVycm9yLWRlc2NyaXB0aW9uIHtcclxuICAgIGZvbnQtc2l6ZTogMS41ZW07XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxufVxyXG4iXX0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'not-found',\r\n    templateUrl: './not-found.component.html',\r\n    styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent {\r\n  \r\n}\r\n","module.exports = \".control-full-width {\\r\\n\\tmin-width: 100px;\\r\\n\\twidth: 100%;\\r\\n}\\r\\n.input-full-width {\\r\\n\\tmin-width: 90px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsZ0JBQWdCO0NBQ2hCLFdBQVc7QUFDWjtBQUNBO0NBQ0MsZUFBZTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250cm9sLWZ1bGwtd2lkdGgge1xyXG5cdG1pbi13aWR0aDogMTAwcHg7XHJcblx0d2lkdGg6IDEwMCU7XHJcbn1cclxuLmlucHV0LWZ1bGwtd2lkdGgge1xyXG5cdG1pbi13aWR0aDogOTBweDtcclxufVxyXG5cclxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from \"@angular/router\"\nimport { Observable, of, Subject, BehaviorSubject, forkJoin, Subscription } from 'rxjs';\nimport { catchError, map, tap, debounceTime, distinctUntilChanged, switchMap, startWith } from 'rxjs/operators';\n\r\nimport {\r\n    FormGroup, FormControl, FormGroupDirective, NgForm, Validators, AbstractControl,\n    ValidationErrors,ValidatorFn, AsyncValidatorFn\r\n} from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { trTotalState, trState, trSettings, ObjHelper, trProgram } from './../../models/message.model';\nimport { SignalsService } from './../../services/signals.service';\r\nimport { ChartService, LineChartSettings } from './../../services/chart.service';\n\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class settingsErrorStateMatcher implements ErrorStateMatcher {\r\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n        //const isSubmitted = form && form.submitted;\r\n        //return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n        return !!(control && control.invalid);\r\n    }\r\n}\n\nexport function outputFileExistsValidator(signalsService: SignalsService): AsyncValidatorFn {\r\n    return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\r\n        return signalsService.GetOutputFileExists(control.value).pipe(\r\n            debounceTime(300), distinctUntilChanged(),\r\n            map(\r\n                fe => {\r\n                    console.log(\"outputFileExistsValidator \"+fe)\r\n                    return (fe == \"1\") ? { \"outputFileExists\": true } : null;\r\n            }\r\n            )\r\n        );\r\n    };\r\n};\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n    private outputFileName$ = new Subject<string>();\n    fileExists$: Observable<string>;\n    users$: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n    lSettings: trSettings = null;\n    //totState: trTotalState = new trTotalState(null, null);\n    OnNewSetting: Subscription = null;\n    OnNewStatus: Subscription = null;\n    settingsForm: FormGroup = null;\n    matcher = new settingsErrorStateMatcher();\n    constructor(\n        private signalsService: SignalsService,\n        private router: Router\n    ) {\n        this.settingsForm = new FormGroup({\n            userControl: new FormControl('', [Validators.required]),\r\n            bearingDescrControl: new FormControl('', [Validators.required]),\r\n            outputFileNameControl: new FormControl('', [Validators.required], [outputFileExistsValidator(this.signalsService)]),\r\n            recIntervalControl: new FormControl(1, [Validators.required, Validators.max(600), Validators.min(1)]),\r\n            manualModeControle: new FormControl(true, []),\r\n            durationControl: new FormControl(10, [Validators.required, Validators.min(1), Validators.max(3000)]),\r\n            loadControl: new FormControl(200, [Validators.required, Validators.min(20), Validators.max(1200)]),\r\n            RPMControl: new FormControl(300, [Validators.required, Validators.min(100), Validators.max(1200)]),\r\n            frictThreshControl: new FormControl(100, [Validators.required, Validators.min(5), Validators.max(120)]),\r\n            tempThreshControl: new FormControl(100, [Validators.required, Validators.min(10), Validators.max(120)]),\r\n        });\n    }\n    \r\n    get userControl() { return this.settingsForm.get('userControl'); }\r\n    get bearingDescrControl() { return this.settingsForm.get('bearingDescrControl'); }\r\n    get outputFileNameControl() { return this.settingsForm.get('outputFileNameControl'); }\r\n    get recIntervalControl() { return this.settingsForm.get('recIntervalControl'); }\r\n    get manualModeControle() { return this.settingsForm.get('manualModeControle'); }\r\n\r\n    get durationControl() { return this.settingsForm.get('durationControl'); }\r\n    get loadControl() { return this.settingsForm.get('loadControl'); }\r\n    get RPMControl() { return this.settingsForm.get('RPMControl'); }\r\n    get frictThreshControl() { return this.settingsForm.get('frictThreshControl'); }\r\n    get tempThreshControl() { return this.settingsForm.get('tempThreshControl'); }\r\n\r\n    filteredOptions: Observable<string[]>;\r\n\n    private _filter(value: string): string[] {\r\n        const filterValue = value.toLowerCase();\r\n        return this.users$.value.filter(option => option.toLowerCase().includes(filterValue));\r\n    }\n\n    get programmList(): trProgram[] {\n        if (this.lSettings) {\r\n            if (this.lSettings.manual_mode) {\r\n                return this.lSettings.program;\r\n            } else {\r\n                return this.lSettings.program.slice(0, 1);\r\n            }\r\n        } else { return [] };\r\n    }\n    ngOnInit() {\n        this.filteredOptions = this.userControl.valueChanges\r\n            .pipe(\r\n                startWith(''),\r\n                map(value => this._filter(value))\r\n            );\n\n        this.bearingDescrControl.valueChanges.subscribe(resOk => { this.lSettings.bearing = resOk });\n        //GetOutputFileExists\n        this.outputFileNameControl.valueChanges.pipe(debounceTime(100), distinctUntilChanged()).\n            subscribe(resOk => { this.lSettings.output_file = resOk });\n        this.recIntervalControl.valueChanges.subscribe(resOk => { this.lSettings.recording_cycle = resOk });\r\n        this.manualModeControle.valueChanges.subscribe(resOk => { this.lSettings.manual_mode = resOk });\n\r\n        this.durationControl.valueChanges.subscribe(resOk => { if (this.selectedRow) { this.selectedRow.duration = resOk; } });\r\n        this.loadControl.valueChanges.subscribe(resOk => { if (this.selectedRow) { this.selectedRow.load = resOk; } });\r\n        this.RPMControl.valueChanges.subscribe(resOk => { if (this.selectedRow) { this.selectedRow.RPM = resOk; } });\r\n        this.frictThreshControl.valueChanges.subscribe(resOk => { if (this.selectedRow) { this.selectedRow.Fmax = resOk; }});\r\n        this.tempThreshControl.valueChanges.subscribe(resOk => { if (this.selectedRow) { this.selectedRow.Tmax = resOk; }});\n\n\n        this.fileExists$ = this.outputFileName$.pipe(\r\n            debounceTime(300),\r\n            distinctUntilChanged(),\r\n            switchMap(fileName =>\r\n                this.signalsService.GetOutputFileExists(fileName))\r\n        );\n        //this.OnNewStatus = this.signalsService.lastState$.subscribe(\n        //    resOk => { if (resOk) this.totState.state = ObjHelper.DeepCopyOfState(resOk); }\n        //);\n        \n        this.getOperators();\n        this.OnNewSetting = this.signalsService.settings$.subscribe(\n            resOk => {\n                if (resOk) {\r\n                    //this.signalsService.GetOperators().subscribe(\r\n                    //    resOk => { this.users$.next(resOk) }\r\n                    //);\r\n                    this.getOperators();\r\n                    //console.log('request');\r\n                    //console.log(resOk);\r\n                    if (this.lSettings) {\r\n                        if (this.lSettings.output_file !== resOk.output_file) {\r\n                            this.outputFileName$.next(resOk.output_file);\r\n                        }\r\n                    } else {\r\n                        this.outputFileName$.next(resOk.output_file);\r\n                    }\r\n                    this.lSettings = ObjHelper.DeepCopyOfState(resOk);\r\n                    this.lSettings.recording_cycle = Math.round(resOk.recording_cycle * resOk.listening_interval / 1000.0);\r\n                    this.lSettings.manual_mode = !resOk.manual_mode;\r\n\r\n                    this.bearingDescrControl.setValue(this.lSettings.bearing);\r\n                    this.outputFileNameControl.setValue(this.lSettings.output_file);\r\n                    this.recIntervalControl.setValue(this.lSettings.recording_cycle);\r\n                    this.manualModeControle.setValue(this.lSettings.manual_mode);\r\n\r\n                    this.durationControl.setValue(this.lSettings.program[0].duration);\r\n                    this.loadControl.setValue(this.lSettings.program[0].load);\r\n                    this.RPMControl.setValue(this.lSettings.program[0].RPM);\r\n                    this.frictThreshControl.setValue(this.lSettings.program[0].Fmax);\r\n                    this.tempThreshControl.setValue(this.lSettings.program[0].Tmax);\r\n\r\n                } else {\r\n                    this.lSettings = null;\r\n                }\r\n            },\n            resErr => { },\n            () => { }\n        );\n    }\r\n    ngOnDestroy() {\r\n        if (this.OnNewSetting) this.OnNewSetting.unsubscribe();\r\n        if (this.OnNewStatus) this.OnNewStatus.unsubscribe();\r\n    }\r\n    getOperators() {\r\n        this.signalsService.GetOperators().subscribe(\r\n            resOk => {\r\n                this.users$.next(resOk);\r\n                if ((this.users$.value) && (this.users$.value.length > 0)) {\r\n                    this.settingsForm.get(\"userControl\").setValue(this.users$.value[0]);\r\n                }\r\n            }\r\n        );\r\n    }\r\n    selectedRow: trProgram = null;\r\n    CreateNewItem(Nr?: number) {\r\n        //if (Nr === undefined) {\r\n        //    return new CurveRow(0, 0, null);\r\n        //} else {\r\n        //    return new CurveRow(0, 0, Nr);\r\n        //}\r\n        return new trProgram(1, this.lSettings.load, this.lSettings.rpm,\r\n            this.lSettings.temperature_threshold, this.lSettings.friction_force_threshold,1);\r\n    }\r\n\r\n    onSelectRow(r: any) {\r\n        this.selectedRow = r;\r\n        this.durationControl.setValue(r.duration);\r\n        this.loadControl.setValue(r.load);\r\n        this.RPMControl.setValue(r.RPM);\r\n        this.frictThreshControl.setValue(r.Fmax);\r\n        this.tempThreshControl.setValue(r.Tmax);\r\n    }\r\n\r\n    DeleteRow() {\r\n        let res = this.lSettings.program;\r\n        let selectedRow_Nr = res.indexOf(this.selectedRow);\r\n        if (selectedRow_Nr != null) {\r\n            if (res.length > 1) {\r\n                res.splice(selectedRow_Nr, 1);\r\n                this.selectedRow = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    InsertItem(before: boolean) {\r\n        let res = this.lSettings.program;\r\n        let nr: number = res.indexOf(this.selectedRow);\r\n        let newItem = this.CreateNewItem();\r\n        if (nr != null) {\r\n            if (before) {\r\n                res.splice(nr, 0, newItem);\r\n            } else {\r\n                res.splice(nr + 1, 0, newItem);\r\n                nr = nr + 1;\r\n            }\r\n        } else {\r\n            if (before) {\r\n                res.unshift(newItem);\r\n                nr = 0;\r\n            } else {\r\n                res.push(newItem);\r\n                nr = res.length - 1;\r\n            }\r\n\r\n        }\r\n        this.selectedRow = res[nr];\r\n    }\r\n\r\n    InserRowBefore() {\r\n        this.InsertItem(true);\r\n    }\r\n\r\n    InserRowAfter() {\r\n        this.InsertItem(false);\r\n    }\r\n\r\n    MoveItem(up: boolean) {\r\n        let res = this.lSettings.program;\r\n        let nr: number = res.indexOf(this.selectedRow);\r\n        let moved: boolean = false;\r\n        if (nr != null) {\r\n            if (up) {\r\n                if (nr > 0) {\r\n                    let it = res[nr];\r\n                    res[nr] = res[nr - 1];\r\n                    nr = nr - 1;\r\n                    res[nr] = it;\r\n                    moved = true;\r\n                }\r\n            } else {\r\n                if (nr < res.length - 1) {\r\n                    let it = res[nr];\r\n                    res[nr] = res[nr + 1];\r\n                    nr = nr + 1;\r\n                    res[nr] = it;\r\n                    moved = true;\r\n                }\r\n            }\r\n            if (moved) {\r\n                this.selectedRow = res[nr];\r\n            }\r\n        }\r\n    }\r\n\r\n    MoveUp() {\r\n        this.MoveItem(true);\r\n    }\r\n\r\n    MoveDown() {\r\n        this.MoveItem(false);\r\n    }\r\n\r\n    onSubmit() {\r\n        let ss = ObjHelper.DeepCopyOfState(this.lSettings);\r\n        ss.recording_cycle = Math.round(ss.recording_cycle * 1000 / ss.listening_interval);\r\n        ss.manual_mode = !ss.manual_mode;\r\n        this.signalsService.EditSettings(ss).subscribe(\r\n            resOk => {\r\n                console.log(\"EditSettingsOk\");\r\n                //console.log(resOk);\r\n                //let v = this.signalsService.totalstate$.value;\r\n                //v.settings = resOk;\r\n                //this.signalsService.totalstate$.next(v);\r\n                //this.totState = DeepCopyOfState(v);\r\n                this.signalsService.GetTotalState();\r\n                if (resOk.output_file) {\r\n                    this.router.navigate(['/controls']);\r\n                }\r\n            },\r\n            resErr => { console.log(\"EditSettingsErr\"); },\r\n            () => { }\r\n        );\r\n    }\r\n    ResFileExists(fileName: string) {\n        this.outputFileName$.next(fileName);\r\n    }\n}\n","import { Component, Input } from '@angular/core';\r\nimport { AbstractControlDirective, AbstractControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'show-errors',\r\n  template: `\r\n    <ul *ngIf=\"shouldShowErrors()\">\r\n      <li style=\"color: red\" *ngFor=\"let error of listOfErrors()\">{{error}}</li>\r\n    </ul>\r\n  `,\r\n})\r\nexport class ShowErrorsComponent {\r\n\r\n  private static readonly errorMessages = {\r\n    'required': () => 'This field is required',\r\n    'minlength': (params) => 'The min number of characters is ' + params.requiredLength,\r\n    'maxlength': (params) => 'The max allowed number of characters is ' + params.requiredLength,\r\n    'pattern': (params) => 'The required pattern is: ' + params.requiredPattern,\r\n    'years': (params) => params.message,\r\n    'countryCity': (params) => params.message,\r\n    'uniqueName': (params) => params.message,\r\n    'telephoneNumbers': (params) => params.message,\r\n    'telephoneNumber': (params) => params.message\r\n  };\r\n\r\n  @Input()\r\n  private control: AbstractControlDirective | AbstractControl;\r\n\r\n  shouldShowErrors(): boolean {\r\n    return this.control &&\r\n      this.control.errors &&\r\n      (this.control.dirty || this.control.touched);\r\n  }\r\n\r\n  listOfErrors(): string[] {\r\n    return Object.keys(this.control.errors)\r\n      .map(field => this.getMessage(field, this.control.errors[field]));\r\n  }\r\n\r\n  private getMessage(type: string, params: any) {\r\n    return ShowErrorsComponent.errorMessages[type](params);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdHJpYi1jb250cm9scy90cmliLWNvbnRyb2xzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { Observable, Subscription, interval ,of} from 'rxjs';\r\n\r\nimport { ChartDataSets, ChartOptions } from 'chart.js';\r\nimport { Color, BaseChartDirective, Label } from 'ng2-charts';\r\n\r\nimport { SensorsData, ObjHelper } from './../../models/message.model';\r\nimport { SignalsService } from './../../services/signals.service';\r\nimport { ChartService, LineChartSettings } from './../../services/chart.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-contols',\r\n  templateUrl: './trib-controls.component.html',\r\n  styleUrls: ['./trib-controls.component.css']\r\n})\r\nexport class TribControlsComponent implements OnInit, OnDestroy {\r\n    currentData: SensorsData = null;\r\n    rpmVal: number = 0;\r\n    public ChartListen: LineChartSettings = null;\r\n    constructor(\r\n        private chartService: ChartService,\r\n        public signalsService: SignalsService) {\r\n        this.ChartListen = this.chartService.ChartListen;\r\n        this.ChartListen.lineChartOptions[\"tooltips\"] = { enabled: false };\r\n        //this.ChartListen.lineChartOptions[\"legend\"] = { position: \"left\" };\r\n        //this.ChartListen.lineChartOptions[\"responsive\"] = false;\r\n        //this.ChartListen.lineChartOptions.scales.xAxes[0] = {\r\n        //    ticks: {\r\n        //        callback: (dataLabel, index) => {\r\n        //            return (index % 5 === 0) ? dataLabel : \"\";\r\n        //        }\r\n        //    }\r\n        //}\r\n    }\r\n\r\n    \r\n    @ViewChild(\"listen\", { read: BaseChartDirective, static: true }) chart: BaseChartDirective;\r\n    \r\n    OnChDCh: Subscription = null;\r\n\r\n    ngOnInit() {\r\n        \r\n        this.OnChDCh = this.chartService.onChartDataChanged$.subscribe(\r\n            reOk => {\r\n                if (reOk) {\r\n                    this.currentData = reOk;\r\n                    this.chart.update();\r\n                }\r\n                //console.log(\"update trib-control\");\r\n            },\r\n            resErr => { },\r\n            () => { }\r\n        );\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.OnChDCh) { this.OnChDCh.unsubscribe(); } \r\n    }\r\n    printNumVal(v: any) {\r\n        return ObjHelper.printNumVal(v);\r\n    }\r\n    //public secondsToSting(s: number) {\r\n    //let t = Math.floor(s / 86400);\r\n    //let ds = t > 0 ? (t < 10 ? \" \" + String(t) : String(t)) : \"  \";\r\n    //let tt = s % 86400;\r\n    //t = Math.floor(tt / 3600);\r\n    //let hs = t > 0 ? (t < 10 ? \"0\" + String(t) : String(t)) : \"00\";\r\n    //tt = tt % 3600;\r\n    //t = Math.floor(tt / 60);\r\n    //let ms = t > 0 ? (t < 10 ? \"0\" + String(t):String(t)) : \"00\";\r\n    //t = tt % 60;\r\n    //let ss = t > 0 ? (t < 10 ? \"0\" + t.toFixed(1) : t.toFixed(1)) : \"00.0\";\r\n    //return `${ds} ${hs}:${ms}:${ss}`;\r\n    //}\r\n\r\n\r\n    StopRotation() {\r\n        this.signalsService.SetRPM(0).subscribe(x => {\r\n            console.log(\"StopRotation \"+x);\r\n        });\r\n    }\r\n\r\n    loadPlus(val: number) {\r\n        this.signalsService.UpdateLoadManual(val).subscribe(x => {\r\n            console.log(\"Load +\" +val);\r\n        });\r\n    }\r\n\r\n    loadMinus(val: number) {\r\n        this.signalsService.UpdateLoadManual(-val).subscribe(x => {\r\n            console.log(\"Load -\" + val);\r\n        });\r\n    }\r\n\r\n    increaseRPM(val: number) {\r\n        console.log(\"increaseRPM\" + val);\r\n        this.signalsService.UpdateRPMManual(val).subscribe(\r\n            resOk => { console.log(\"RPM\" + val); }\r\n        );\r\n    }\r\n    decreaseRPM(val: number) {\r\n        console.log(\"decreaseRPM\" + val);\r\n        this.signalsService.UpdateRPMManual(-val).subscribe(\r\n            resOk => { console.log(\"RPM\" + val); }\r\n        );\r\n    }\r\n    setRPMAuto(val: number) {\r\n        this.signalsService.SetRPM(val).subscribe(\r\n            resOk => { this.signalsService.settings$.next(resOk); }\r\n        );\r\n        console.log(val);\r\n    }\r\n    setLoadAuto(val: number) {\r\n        this.signalsService.SetLoad(val).subscribe(\r\n            resOk => { this.signalsService.settings$.next(resOk); }\r\n        );\r\n        console.log(val);\r\n    }\r\n    setThresholds(maxFr: number, maxTemp: number) {\r\n        this.signalsService.UpdateThresholds(maxFr, maxTemp).subscribe(\r\n            resOk => { this.signalsService.settings$.next(resOk); }\r\n        );\r\n    }\r\n}\r\n","export const base_url = \"http://localhost:8787/\";\r\nexport const SERVER_URL = \"ws://localhost:8787/api/ss\";\r\n\r\n\r\nexport enum ExperimentStatus {\r\n    invalid = 0, valid = 1, started = 2, completed = 3\r\n}\r\nexport class CalibrationCurve {\r\n    x: number[] = [];\r\n    y: number[] = [];\r\n}\r\n\r\nexport class trState {\r\n    public status: number = 0;\r\n    public VFD_on: boolean = false;\r\n    public load_on: boolean = false;\r\n    public stopTime: boolean = false;\r\n    public stopTlim: boolean = false;\r\n    public stopFlim: boolean = false;\r\n    public rpmReg: boolean = false;\r\n    public loadReg: boolean = false;\r\n    public rpmRegTimedOut: boolean = false;\r\n    public loadRegTimedOut: boolean = false;\r\n    public rpmRegAuto: boolean = false;\r\n    public loadRegAuto: boolean = false;\r\n    constructor( stStr:string) {\r\n        this.status = +stStr.charAt(0);\r\n        this.VFD_on=stStr.charAt(1) !== \"0\";\r\n        this.load_on=stStr.charAt(2) !== \"0\";\r\n        this.stopTime=stStr.charAt(3) !== \"0\";\r\n        this.stopTlim=stStr.charAt(4) !== \"0\";\r\n        this.stopFlim=stStr.charAt(5) !== \"0\";\r\n        this.rpmReg=stStr.charAt(6) !== \"0\";\r\n        this.loadReg=stStr.charAt(7) !== \"0\";\r\n        this.rpmRegTimedOut=stStr.charAt(8) !== \"0\";\r\n        this.loadRegTimedOut = stStr.charAt(9) !== \"0\";\r\n        this.rpmRegAuto = stStr.charAt(10) !== \"0\";\r\n        this.loadRegAuto = stStr.charAt(11) !== \"0\";\r\n    }\r\n    toStateString() {\r\n        return \"\" + this.status +\r\n            (this.VFD_on ? \"1\" : \"0\") + (this.load_on ? \"1\" : \"0\")+\r\n            (this.stopTime ? \"1\" : \"0\") + (this.stopTlim ? \"1\" : \"0\")+\r\n            (this.stopFlim ? \"1\" : \"0\") + (this.rpmReg ? \"1\" : \"0\") +\r\n            (this.loadReg ? \"1\" : \"0\") + (this.rpmRegTimedOut ? \"1\" : \"0\") + (this.loadRegTimedOut ? \"1\" : \"0\") +\r\n            (this.rpmRegAuto ? \"1\" : \"0\") + (this.loadRegAuto ? \"1\" : \"0\");\r\n        \r\n    }\r\n    copy() {\r\n        return new trState( this.toStateString() );\r\n    }\r\n}\r\n\r\nexport class trProgram {\r\n    constructor(\r\n        public duration: number,\r\n        public load: number,\r\n        public RPM: number,\r\n        public Tmax: number,\r\n        public Fmax: number,\r\n        public Vibrmax: number) {\r\n\r\n    }\r\n    copy() {\r\n        return new trProgram(\r\n            this.duration, this.load, this.RPM,\r\n            this.Tmax, this.Fmax, this.Vibrmax);\r\n    }\r\n} \r\nexport class trSettings {\r\n    constructor(\r\n        public working_directory: string,\r\n        public user: string,\r\n        public bearing: string,\r\n        public output_file: string,\r\n        public log_file: string,\r\n        public friction_force_calibration_curve_file: string,\r\n        public load_calibration_curve_file: string,\r\n        public rpm_calibration_curve_file: string,\r\n        // miliseconds\r\n        public listening_interval: number,\r\n        // listening intervals count\r\n        public recording_cycle: number,\r\n        // listening intervals count\r\n        public visualisation_cycle: number,\r\n        // hours (manual mode)\r\n        public total_duration: number,\r\n        public rpm: number,\r\n        public load: number,\r\n        public manual_mode: boolean,\r\n        public program: trProgram[],\r\n        //=================================================================\r\n        //control parameters\r\n        // [N]\r\n        public friction_force_threshold: number,\r\n        // C\r\n        public temperature_threshold: number,\r\n        // [N]\r\n        public loadRegualtionAccuracy: number,\r\n        // rotation per minute\r\n        public RPMRegualtionAccuracy: number,\r\n        // optional field\r\n        public readme: string) {\r\n    }\r\n\r\n    copy() {\r\n        let pr: trProgram[] = [];\r\n        this.program.forEach(it => { pr.push(it.copy()); })\r\n        return new trSettings(\r\n            this.working_directory,\r\n            this.user,\r\n            this.bearing,\r\n            this.output_file,\r\n            this.log_file,\r\n            this.friction_force_calibration_curve_file,\r\n            this.load_calibration_curve_file,\r\n            this.rpm_calibration_curve_file,\r\n            // miliseconds\r\n            this.listening_interval,\r\n            // listening intervals count\r\n            this.recording_cycle,\r\n            // listening intervals count\r\n            this.visualisation_cycle,\r\n            // hours (manual mode)\r\n            this.total_duration,\r\n            this.rpm,\r\n            this.load,\r\n            this.manual_mode, pr,\r\n            this.friction_force_threshold,\r\n            this.temperature_threshold,\r\n            this.loadRegualtionAccuracy,\r\n            this.RPMRegualtionAccuracy,\r\n            this.readme\r\n        );\r\n    }\r\n}\r\n\r\nexport class trTotalState {\r\n    constructor(public settings: trSettings, public state: trState) {\r\n    }\r\n    copy() {\r\n        return new trTotalState(this.settings ? this.settings.copy() : null, this.state ? this.state.copy() : null);\r\n    }\r\n}\r\n\r\nexport class trResultBase64FileData {\r\n    constructor(\r\n        public time: string,\r\n        public load: string,\r\n        public RPM: string,\r\n        public temperature: string,\r\n        public friction: string) {\r\n    }\r\n}\r\n\r\nexport class trResultFileData {\r\n    time: number[] = [];\r\n    load: number[] = [];\r\n    RPM: number[] = [];\r\n    temperature: number[] = [];\r\n    friction: number[] = [];\r\n    constructor(res:trResultBase64FileData\r\n    ) {\r\n        if (res) {\r\n            this.time = this.Base64_2_float32(res.time);\r\n            this.load = this.Base64_2_float32(res.load);\r\n            this.RPM = this.Base64_2_float32(res.RPM);\r\n            this.temperature = this.Base64_2_float32(res.temperature);\r\n            this.friction = this.Base64_2_float32(res.friction);\r\n        }\r\n    }\r\n    Base64_2_float32(b64str: string) {\r\n        let bs = atob(b64str);\r\n        let rawLength = bs.length;\r\n        //let ab = new ArrayBuffer(rawLength);\r\n        let ab = new Uint8Array(rawLength);\r\n        for (let i = 0; i < rawLength; i++) {\r\n            ab[i] = bs.charCodeAt(i);\r\n        }\r\n        //let fa = new Float64Array(ab.buffer,0,5);\r\n        let fa = new Float32Array(ab.buffer);\r\n        let res: number[] = [];\r\n        fa.forEach(x => res.push(x));\r\n        return res;\r\n    }\r\n}\r\n\r\n//export class SensorsData {\r\n//    constructor(\r\n//        public time: number,\r\n//        public temperature?: number,\r\n//        public rotationrate?: number,\r\n//        public load?: number,\r\n//        public frictionforce?: number) { }\r\n//}\r\n\r\nexport class SensorsDataBase64 {\r\n    constructor(\r\n        public db?: string,\r\n        public vb?: string,\r\n        public adb?: string,\r\n        public avb?: string,\r\n        public tb?: string) { }\r\n}\r\n\r\nexport class SensorsData{\r\n    constructor(\r\n        public db?: Float64Array,\r\n        public vb?: Float64Array,\r\n        public adb?: Float64Array,\r\n        public avb?: Float64Array,\r\n        public tb?: Float64Array) { }\r\n}\r\n\r\nexport class SocketMessageDataBase64 {\r\n    constructor(\r\n        public sensorData?: SensorsDataBase64,\r\n        public state?: string) { }\r\n}\r\n\r\nexport class SocketMessageData {\r\n    sensorData: SensorsData = null;\r\n    state: trState = null;\r\n    constructor(\r\n        sm:SocketMessageDataBase64\r\n    ) {\r\n        this.state = sm.state? new trState(sm.state):null;\r\n        if (sm.sensorData) {\r\n            this.sensorData = new SensorsData(\r\n                this.Base64_2_float64(sm.sensorData.db),\r\n                this.Base64_2_float64(sm.sensorData.vb),\r\n                this.Base64_2_float64(sm.sensorData.adb),\r\n                this.Base64_2_float64(sm.sensorData.avb),\r\n                this.Base64_2_float64(sm.sensorData.tb)\r\n            );\r\n        } else {\r\n            this.sensorData = null;\r\n        }\r\n        \r\n    }\r\n\r\n    Base64_2_float64(b64str: string) {\r\n        let bs = atob(b64str);\r\n        let rawLength = bs.length;\r\n        //let ab = new ArrayBuffer(rawLength);\r\n        let ab = new Uint8Array(rawLength);\r\n        for (let i = 0; i < rawLength; i++) {\r\n            ab[i] = bs.charCodeAt(i);\r\n        }\r\n        //let fa = new Float64Array(ab.buffer,0,5);\r\n        return new Float64Array(ab.buffer);\r\n    }\r\n}\r\n\r\nexport class ObjHelper {\r\n    static DeepCopyOfState(stateObj: trTotalState | trSettings | trState | trProgram) {\r\n        if (!stateObj) {\r\n            return null;\r\n        } else if (stateObj instanceof trTotalState) {\r\n            return new trTotalState(ObjHelper.DeepCopyOfState(stateObj.settings), ObjHelper.DeepCopyOfState(stateObj.state));\r\n        } else if (stateObj instanceof trSettings) {\r\n            let pr: trProgram[] = [];\r\n            stateObj.program.forEach(it => { pr.push(ObjHelper.DeepCopyOfState(it)); })\r\n            return new trSettings(\r\n                stateObj.working_directory,\r\n                stateObj.user,\r\n                stateObj.bearing,\r\n                stateObj.output_file,\r\n                stateObj.log_file,\r\n                stateObj.friction_force_calibration_curve_file,\r\n                stateObj.load_calibration_curve_file,\r\n                stateObj.rpm_calibration_curve_file,\r\n                // miliseconds\r\n                stateObj.listening_interval,\r\n                // listening intervals count\r\n                stateObj.recording_cycle,\r\n                // listening intervals count\r\n                stateObj.visualisation_cycle,\r\n                // hours (manual mode)\r\n                stateObj.total_duration,\r\n                stateObj.rpm,\r\n                stateObj.load,\r\n                stateObj.manual_mode, pr,\r\n                stateObj.friction_force_threshold,\r\n                stateObj.temperature_threshold,\r\n                stateObj.loadRegualtionAccuracy,\r\n                stateObj.RPMRegualtionAccuracy,\r\n                stateObj.readme\r\n            );\r\n        } else if (stateObj instanceof trState) {\r\n            return new trState(stateObj.toStateString());\r\n        } else if (stateObj instanceof trProgram) {\r\n            return new trProgram(\r\n                stateObj.duration, stateObj.load, stateObj.RPM,\r\n                stateObj.Tmax, stateObj.Fmax, stateObj.Vibrmax);\r\n\r\n        } else {\r\n            return JSON.parse(JSON.stringify(stateObj));\r\n        }\r\n    }\r\n    static printNumVal(v: any) {\r\n        let vv = +v\r\n        if (vv) { return isNaN(v) ? \"-\" : v.toFixed(3) } else { return \"\" + v; }\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Observer ,of, Subscription,BehaviorSubject} from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators'\r\n\r\n//import * as socketIo from 'socket.io-client';\r\nimport { webSocket } from \"rxjs/webSocket\";\r\n\r\nimport { ChartDataSets, ChartOptions } from 'chart.js';\r\nimport { Color, BaseChartDirective, Label } from 'ng2-charts';\r\nimport { SensorsData, trResultFileData, trResultBase64FileData } from './../models/message.model';\r\nimport { SignalsService } from './signals.service';\r\nimport { Number } from 'bokehjs/build/js/types/core/properties';\r\n\r\n//import { forEach } from '@angular/router/src/utils/collection';\r\n\r\nexport class LineChartSettings {\r\n    public lineChartData: ChartDataSets[] = [\r\n        { data: [], label: 'Temperature', yAxisID: \"y-axis-T\", fill: false, lineTension: 0, pointBorderWidth: 0, pointRadius: 0 },\r\n        { data: [], label: 'RPM', yAxisID: \"y-axis-RPM\", fill: false, lineTension: 0, pointBorderWidth: 0, pointRadius: 0 },\r\n        { data: [], label: 'Load', yAxisID: 'y-axis-load', fill: false, lineTension: 0, pointBorderWidth: 0, pointRadius: 0 },\r\n        { data: [], label: 'Friction force', yAxisID: 'y-axis-Fr', fill: false, lineTension: 0, pointBorderWidth: 0, pointRadius: 0 }\r\n    ];\r\n    public lineChartLabels: Label[] = [];\r\n    public lineChartOptions: ChartOptions = {\r\n        //responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: { duration: 0 },\r\n        scales: {\r\n            // We use this empty structure as a placeholder for dynamic theming.\r\n            xAxes: [{}],\r\n            yAxes: [\r\n                {\r\n                    id: 'y-axis-T',\r\n                    position: 'left',\r\n                    ticks: {\r\n                        fontColor: 'red',\r\n                        min:15,\r\n                        max:100,\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Temperature, °C'\r\n                    }\r\n                },\r\n                {\r\n                    id: 'y-axis-RPM',\r\n                    position: 'left',\r\n                    gridLines: {\r\n                        display: false\r\n                        //color: 'rgba(255,0,0,0.3)',\r\n                    },\r\n                    ticks: {\r\n                        fontColor: 'rgba(77,83,96,1)',\r\n                        min: 0,\r\n                        max: 1200,\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'RPM'\r\n                    }\r\n                },\r\n                {\r\n                    id: 'y-axis-load',\r\n                    position: 'left',\r\n                    gridLines: {\r\n                        display: false\r\n                        //color: 'rgba(0,0,255,0.3)',\r\n                    },\r\n                    ticks: {\r\n                        fontColor: 'rgba(0,0,255,0.5)',\r\n                        min: 0,\r\n                        max: 1200,\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Load, N'\r\n                    }\r\n                },\r\n                {\r\n                    id: 'y-axis-Fr',\r\n                    position: 'left',\r\n                    gridLines: {\r\n                        display: false\r\n                        //color: 'rgba(0,0,255,0.2)',\r\n                    },\r\n                    ticks: {\r\n                        fontColor: 'green',\r\n                        min: 0,\r\n                        max: 120,\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Friction force, N'\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    };\r\n    public lineChartColors: Color[] = [\r\n        { // grey\r\n            //backgroundColor: 'rgba(148,159,177,0.2)',\r\n            borderColor: 'red',\r\n            //pointBackgroundColor: 'rgba(148,159,177,1)',\r\n            //pointBorderColor: '#fff',\r\n            //pointHoverBackgroundColor: '#fff',\r\n            //pointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n        },\r\n        { // dark grey\r\n            //backgroundColor: 'rgba(77,83,96,0.2)',\r\n            borderColor: 'rgba(77,83,96,1)',\r\n            //pointBackgroundColor: 'rgba(77,83,96,1)',\r\n            //pointBorderColor: '#fff',\r\n            //pointHoverBackgroundColor: '#fff',\r\n            //pointHoverBorderColor: 'rgba(77,83,96,1)'\r\n        },\r\n        { // blue\r\n            //backgroundColor: 'rgba(255,0,0,0.3)',\r\n            borderColor: 'rgba(0,0,255,0.5)',\r\n            //pointBackgroundColor: 'rgba(148,159,177,1)',\r\n            //pointBorderColor: '#fff',\r\n            //pointHoverBackgroundColor: '#fff',\r\n            //pointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n        },\r\n        { // blue\r\n            //backgroundColor: 'rgba(0,0,255,0.3)',\r\n            borderColor: 'green',\r\n            //pointBackgroundColor: 'rgba(148,159,177,1)',\r\n            //pointBorderColor: '#fff',\r\n            //pointHoverBackgroundColor: '#fff',\r\n            //pointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n        }\r\n    ];\r\n    public lineChartLegend = true;\r\n    public lineChartType = 'line';\r\n\r\n}\r\n\r\nexport const chartDataLength: number = 100;\r\n\r\n@Injectable()\r\nexport class ChartService {\r\n    public expFileDataRefreshPeriodMin = 1;\r\n    public onChartDataChanged$: BehaviorSubject<SensorsData> = new BehaviorSubject<SensorsData>(null);\r\n    public ChartListen: LineChartSettings = new LineChartSettings();\r\n    public expFileData$: BehaviorSubject<trResultFileData> = new BehaviorSubject<trResultFileData>(new trResultFileData(null));\r\n\r\n    constructor(private http: HttpClient,\r\n        private signalsService: SignalsService) {\r\n        let l: Label[] = [];  let d1: number[] = []; let d2: number[] = []; let d3: number[] = []; let d4: number[] = [];\r\n        for (let i = 0; i <= chartDataLength; i++) {\r\n            //l.push(String(i - chartDataLength));\r\n            l.push(String(chartDataLength-i)); //d1.push(0.0); d2.push(0.0); d3.push(0.0); d4.push(0.0); \r\n            d1.push(NaN); d2.push(NaN); d3.push(NaN); d4.push(NaN);\r\n        }\r\n        this.ChartListen.lineChartData[0].data = d1;\r\n        this.ChartListen.lineChartData[1].data = d2;\r\n        this.ChartListen.lineChartData[2].data = d3;\r\n        this.ChartListen.lineChartData[3].data = d4;\r\n        this.ChartListen.lineChartLabels = l;\r\n        //this.ChartListen.lineChartData[0].data = new Array<number>(chartDataLength);\r\n        //this.ChartListen.lineChartData[0].data.fill(0.0);\r\n        //this.ChartListen.lineChartData[1].data = new Array<number>(chartDataLength);\r\n        //this.ChartListen.lineChartData[1].data.fill(0.0);\r\n        //this.ChartListen.lineChartData[2].data = new Array<number>(chartDataLength);\r\n        //this.ChartListen.lineChartData[2].data.fill(0.0);\r\n        //this.ChartListen.lineChartData[3].data = new Array<number>(chartDataLength);\r\n        //this.ChartListen.lineChartData[3].data.fill(0.0);\r\n        //this.ChartListen.lineChartLabels = new Array<Label>(chartDataLength);\r\n        //for (let i = 0; i <= chartDataLength; i++) {\r\n        //    this.ChartListen.lineChartLabels[i] = String(i);\r\n        //}\r\n        //this.onChartDataChanged$.next(new SensorsData(-1, -1, -1, -1, -1));\r\n\r\n    }\r\n\r\n    getDataFromFile() {\r\n        this.signalsService.GetDataFromResultFile().subscribe(x => {\r\n            if (x) {\r\n                console.log(\"this.expFileData$.next(x)\");\r\n                let xx = new trResultFileData(x);\r\n                this.expFileData$.next(xx);\r\n            }\r\n        });\r\n    }\r\n    \r\n\r\n    public initChartData() {\r\n        for (let i = 0; i < this.ChartListen.lineChartData.length; i++) {\r\n            //this.ChartListen.lineChartData[i].data.fill(0.0);\r\n            for (let j = 0; j < this.ChartListen.lineChartData[i].data.length; j++) {\r\n                this.ChartListen.lineChartData[i].data[j] = NaN;\r\n            }\r\n        }\r\n    }\r\n    NanToNum(v: number) {\r\n        return isNaN(v) ? 0.0 : v;\r\n    }\r\n    public updateChartData(x: SensorsData): void {\r\n        if (x) {\r\n            //this.ChartListen.lineChartData[0].data.unshift(x.temperature)\r\n            //this.ChartListen.lineChartData[0].data.pop();\r\n            //this.ChartListen.lineChartData[1].data.unshift(x.rotationrate)\r\n            //this.ChartListen.lineChartData[1].data.pop();\r\n            //this.ChartListen.lineChartData[2].data.unshift(x.load)\r\n            //this.ChartListen.lineChartData[2].data.pop();\r\n            //this.ChartListen.lineChartData[3].data.unshift(x.frictionforce)\r\n            //this.ChartListen.lineChartData[3].data.pop();\r\n            let jj = this.ChartListen.lineChartData[0].data.length - 1;\r\n            for (let j = 1; j < jj+1; j++) {\r\n                this.ChartListen.lineChartData[0].data[j-1] = this.ChartListen.lineChartData[0].data[j];\r\n                this.ChartListen.lineChartData[1].data[j-1] = this.ChartListen.lineChartData[1].data[j];\r\n                this.ChartListen.lineChartData[2].data[j-1] = this.ChartListen.lineChartData[2].data[j];\r\n                this.ChartListen.lineChartData[3].data[j-1] = this.ChartListen.lineChartData[3].data[j];\r\n            }\r\n            //\"load\": sd[1], \"frictionforce\":sd[2], \"rotationrate\": sd[3], \"temperature\": sd[4]\r\n            this.ChartListen.lineChartData[0].data[jj] = x.db[4];//this.NanToNum(x.temperature);\r\n            this.ChartListen.lineChartData[1].data[jj] = x.db[3];//this.NanToNum(x.rotationrate);\r\n            this.ChartListen.lineChartData[2].data[jj] = x.db[1];//this.NanToNum(x.load);\r\n            this.ChartListen.lineChartData[3].data[jj] = x.db[2];//this.NanToNum(x.frictionforce);\r\n            this.onChartDataChanged$.next(x);\r\n        }\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of, BehaviorSubject, forkJoin, Subscription } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { webSocket } from \"rxjs/webSocket\";\r\nimport {\r\n    trState, trProgram, trSettings, trResultFileData, trTotalState,\r\n    SensorsData, CalibrationCurve, trResultBase64FileData,\r\n    base_url, SERVER_URL,\r\n    SensorsDataBase64, SocketMessageDataBase64, SocketMessageData\r\n} from './../models/message.model';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n    })\r\n}\r\n\r\n@Injectable()\r\nexport class SignalsService {\r\n    //totalstate$: BehaviorSubject<trTotalState> = new BehaviorSubject<trTotalState>(null);\r\n    settings$: BehaviorSubject<trSettings> = new BehaviorSubject<trSettings>(null);\r\n    lastData$: BehaviorSubject<SensorsData> = new BehaviorSubject(null);\r\n    lastState$: BehaviorSubject<trState> = new BehaviorSubject(null);\r\n    subsctiprion: Subscription[] = null;\r\n    //socket = webSocket<SocketMessageData>(SERVER_URL);\r\n    socket = webSocket<SocketMessageDataBase64>(SERVER_URL).pipe(map(x => {\r\n        let res = new SocketMessageData(x);\r\n        return res;\r\n    }));\r\n\r\n    constructor(private http: HttpClient ) {\r\n        //this.GetState().subscribe(x => { this.state = x });\r\n        //this.GetSettings().subscribe(x => { this.settings = x });\r\n    }\r\n\r\n    //getTotalState() {\r\n    //    forkJoin(this.GetState(), this.GetSettings()).subscribe(([st, stt]) => {\r\n    //        this.totalstate$.next(new trTotalState(stt, st));\r\n    //    })\r\n    //}\r\n\r\n    //subsctiprion: Subscription[] = null;\r\n    //public initSocket(): void {\r\n    //    //this.socket = socketIo(SERVER_URL);\r\n    //    this.subsctiprion.push(this.socket.subscribe(\r\n    //        msg => {\r\n    //            //console.log('msg: ' + msg); // Called whenever there is a message from the server.\r\n    //            //console.log('msg');\r\n    //            if (msg.sensorData) {\r\n    //                this.lastData$.next(msg.sensorData);\r\n    //            }\r\n    //            if (msg.state) {\r\n    //                this.lastState$.next(msg.state);\r\n    //            }\r\n    //        },\r\n    //        err => console.log(err), // Called if at any point WebSocket API signals some kind of error.\r\n    //        () => console.log('socket connection is closed!') // Called when connection is closed (for whatever reason).\r\n    //    )\r\n    //    );\r\n    //}\r\n\r\n    public send(message: SensorsData): void {\r\n        //this.socket.emit('message', message);\r\n    }\r\n\r\n    //public onMessage(): Observable<SensorsData> {\r\n    //    return of(null);\r\n    //    // return new Observable<SensorsData>(observer => {\r\n    //    //   this.socket.on('message', (data: SensorsData) => observer.next(data));\r\n    //    // });\r\n    //}\r\n\r\n    // public onEvent(event: Event): Observable<any> {\r\n    //   return new Observable<Event>(observer => {\r\n    //     this.socket.on(event, () => observer.next());\r\n    //   });\r\n    // }\r\n\r\n\r\n    public startListen(): Observable<any> {\r\n        const url = base_url + \"api/beginr\";\r\n        return this.http.get<any>(url).pipe(\r\n            tap(_ => console.log(\"startListen\")),\r\n            catchError(this.handleError<any>(\"startListen\"))\r\n        );\r\n    }\r\n    public stopListen(): Observable<any> {\r\n        const url = base_url + \"api/endr\";\r\n        this.subsctiprion.forEach(it => { it.unsubscribe(); });\r\n        this.subsctiprion = [];\r\n        //this.buffer = [];\r\n        //this.lastData$.next(null);\r\n        return this.http.get<any>(url).pipe(\r\n            tap(_ => console.log(\"stopListen\")),\r\n            catchError(this.handleError<any>(\"stopListen\"))\r\n\r\n        );\r\n    }\r\n\r\n    beginWrite(): Observable<any> {\r\n        const url = base_url + \"api/beginw\";\r\n        return this.http.get<any>(url).pipe(\r\n            tap(_ => console.log(\"beginWrite\")),\r\n            catchError(this.handleError<any>(\"beginWrite\"))\r\n        );\r\n    }\r\n    endWrite(): Observable<any> {\r\n        const url = base_url + \"api/endw\";\r\n        return this.http.get<any>(url).pipe(\r\n            tap(_ => console.log(\"endWrite\")),\r\n            catchError(this.handleError<any>(\"endWrite\"))\r\n        );\r\n    }\r\n    UpdateSettings() {\r\n        this.GetSettings().subscribe(\r\n            resOk => { this.settings$.next(resOk); }\r\n        );\r\n    }\r\n    UpdateStatus() {\r\n        this.GetState().subscribe(\r\n            resOk => { this.lastState$.next(new trState(resOk)); }\r\n        );\r\n    }\r\n    GetTotalState() {\r\n        forkJoin(this.GetState(), this.GetSettings()).subscribe(\r\n            ([st, stt]) => {\r\n                console.log(\"Get Settings: Ok\");\r\n                this.settings$.next(stt);\r\n                this.lastState$.next(new trState(st));\r\n                //this.totalstate$.next(new trTotalState(stt, new trState(st)))\r\n            },\r\n            resErr => { console.log(\"Get Settings: Error\"); },\r\n            () => { }\r\n        );\r\n    }\r\n\r\n    GetCalibrationCurve(clbr_curve_name: string): Observable<CalibrationCurve> {\r\n        let url = base_url + `api/sett?case=${clbr_curve_name}`;\r\n        return this.http.get<CalibrationCurve>(url).pipe(\r\n            tap(_ => console.log(\"GetCalibrationCurve\")),\r\n            catchError(this.handleError<any>(\"GetCalibrationCurve\"))\r\n        );\r\n    }\r\n\r\n    UpdateLoadManual(delta: number): Observable<string> {\r\n        let url = base_url + `api/sett?case=manualload&val=${delta}`;\r\n        return this.http.get<string>(url).pipe(\r\n            tap(_ => console.log(\"UpdateLoadManual\")),\r\n            catchError(this.handleError<any>(\"UpdateLoadManual\"))\r\n        );\r\n    }\r\n\r\n    UpdateRPMManual(delta: number): Observable<string> {\r\n        let url = base_url + `api/sett?case=manualrpm&val=${delta}`;\r\n        return this.http.get<string>(url).pipe(\r\n            tap(_ => console.log(\"UpdateRPMManual\")),\r\n            catchError(this.handleError<any>(\"UpdateRPMManual\"))\r\n        );\r\n    }\r\n\r\n    UpdateThresholds(frict: number, temp: number): Observable<trSettings> {\r\n        let url = base_url + `api/sett?case=threshold&f=${frict}&t=${temp}`;\r\n        return this.http.get<trSettings>(url).pipe(\r\n            tap(_ => console.log(\"UpdateThresholds\")),\r\n            catchError(this.handleError<any>(\"UpdateThresholds\"))\r\n        );\r\n    }\r\n    //st_case == \"operators\" fileexists val\r\n    GetOperators(): Observable<string[]> {\r\n        let url = base_url + \"api/sett?case=operators\";\r\n        return this.http.get<string[]>(url).pipe(\r\n            tap(_ => console.log(\"GetOperators\")),\r\n            catchError(this.handleError<any>(\"GetOperators\"))\r\n        );\r\n    }\r\n    GetOutputFileExists(fileName:string): Observable<string> {\r\n        let url = base_url + `api/sett?case=fileexists&val=${fileName}`;\r\n        return this.http.get<string>(url).pipe(\r\n            tap(_ => console.log(\"GetOutputFileExists\")),\r\n            catchError(this.handleError<any>(\"GetOutputFileExists\"))\r\n        );\r\n    }\r\n\r\n    EditCalibrationCurve(clbr_curve_name: string, curve_data: CalibrationCurve): Observable<CalibrationCurve> {\r\n        let url = base_url + `api/sett?case=${clbr_curve_name}`;\r\n        return this.http.post<CalibrationCurve>(url, curve_data, httpOptions).pipe(\r\n            catchError(this.handleError('EditCalibrationCurve', curve_data))\r\n        );\r\n    }\r\n\r\n    GetState(): Observable<string> {\r\n        let url = base_url + \"api/sett?case=st\";\r\n        return this.http.get<string>(url).pipe(\r\n            tap(_ => console.log(\"GetState\")),\r\n            catchError(this.handleError<any>(\"GetState\"))\r\n        );//.pipe(map(stStr => { console.log(stStr); return (stStr != null) ? new trState(stStr) : null; }));\r\n    }\r\n\r\n    GetSettings(): Observable<trSettings> {\r\n        let url = base_url + \"api/sett?case=base\";\r\n        return this.http.get<trSettings>(url).pipe(\r\n            tap(_ => console.log(\"GetSettings\")),\r\n            catchError(this.handleError<any>(\"GetSettings\"))\r\n        );\r\n    }\r\n\r\n    EditSettings(data: trSettings): Observable<trSettings> {\r\n        let url = base_url + \"api/sett?case=base\";\r\n        return this.http.post<trSettings>(url, data, httpOptions).pipe(\r\n            catchError(this.handleError(\"EditSettings\", data))\r\n        );\r\n    }\r\n\r\n    SetRPM(rpm: number): Observable<trSettings> {\r\n        let url = base_url + `api/sett?case=rpm&val=${rpm}`;\r\n        return this.http.get<trSettings>(url).pipe(\r\n            tap(_ => console.log(\"SetRPM\")),\r\n            catchError(this.handleError<any>(\"SetRPM\"))\r\n        );\r\n    }\r\n\r\n    SetLoad(load: number): Observable<trSettings> {\r\n        let url = base_url + `api/sett?case=load&val=${load}`;\r\n        return this.http.get<trSettings>(url).pipe(\r\n            tap(_ => console.log(\"SetLoad\")),\r\n            catchError(this.handleError<any>(\"SetLoad\"))\r\n        );\r\n    }\r\n\r\n    GetDataFromResultFile(): Observable<trResultBase64FileData> {\r\n        let url = base_url + \"api/sett?case=resultfile\";\r\n        return this.http.get<trResultBase64FileData>(url).pipe(\r\n            tap(_ => console.log(\"GetDataFromResultFile\")),\r\n            catchError(this.handleError<any>(\"GetDataFromResultFile\"))\r\n        );\r\n    }\r\n    /**\r\n     * Handle Http operation that failed.\r\n     * Let the app continue.\r\n     * @param operation - name of the operation that failed\r\n     * @param result - optional value to return as the observable result\r\n     */\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            console.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"bearing.png\";","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}